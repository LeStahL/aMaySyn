#define PI radians(180.)
float clip(float a) { return clamp(a,-1.,1.); }
float theta(float x) { return smoothstep(0.,1e-3,clamp(x,0.,1e-3)); }
float _sin(float a) { return sin(2. * PI * mod(a,1.)); }
float _sin_(float a, float p) { return sin(2. * PI * mod(a,1.) + p); }
float _sq(float a) { return sign(2.*fract(a) - 1.); }
float _sq_(float a,float pwm) { return sign(2.*fract(a) - 1. + pwm); }
float _psq(float a) { return clip(50.*_sin(a)); }
float _psq_(float a, float pwm) { return clip(50.*(_sin(a) - pwm)); } 
float _tri(float a) { return (4.*abs(fract(a)-.5) - 1.); }
float _saw(float a) { return (2.*fract(a) - 1.); }
float freqC1(float note){ return 32.7 * pow(2., note/12.); }
float minus1hochN(int n) { return (1. - 2.*float(n % 2)); }
float minus1hochNminus1halbe(int n) { return round(sin(.5*PI*float(n))); }
float pseudorandom(float x) { return fract(sin(dot(vec2(x),vec2(12.9898,78.233))) * 43758.5453); }
float fhelp(float x) { return 1. + .333*x; } // 1. + .33333*x + .1*x*x + .02381*x*x*x + .00463*x*x*x*x;

#define pat4(a,b,c,d,x) mod(x,1.)<.25 ? a : mod(x,1.)<.5 ? b : mod(x,1.) < .75 ? c : d

const float BPM = 40.;
const float BPS = BPM/60.;
const float SPB = 60./BPM;

const float Fsample = 44100.; // PRODUCTION: CHANGE THIS BACK TO 44100.
const float Tsample = 1./Fsample;

const float stereo_delay = 2e-4; //enhance the stereo feel - this is experimental since I included the stereo functionality

const float filterthreshold = 1e-3;

const float sequence_texture[6852] = float[6852](0.,16.,62.,104.,107.,114.,118.,63.,63.,63.,57.,52.,62.,.47998046875,1.,.85009765625,.1600341796875,.340087890625,.7099609375,1.,1.,1.,.60009765625,.1500244140625,.040008544921875,0.,0.,0.,.125,.125,.125,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,38.,58.,62.,4.,8.,12.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,33.,34.,35.,38.,39.,40.,41.,42.,43.,44.,45.,46.,47.,48.,49.,50.,51.,52.,53.,54.,55.,56.,57.,58.,59.,60.,61.,8.,12.,16.,17.,18.,19.,20.,21.,22.,23.,24.,26.,28.,30.,32.,34.,36.,37.,38.,39.,40.,41.,42.,43.,44.,45.,46.,47.,48.,49.,50.,51.,52.,53.,54.,55.,56.,57.,58.,59.,60.,61.,36.,38.,54.,0.,24.,26.,28.,30.,38.,54.,16.,36.,38.,54.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,36.,39.,62.,66.,8.,12.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,34.,35.,36.,39.,40.,41.,42.,43.,44.,45.,46.,47.,48.,49.,50.,51.,52.,53.,54.,55.,56.,57.,58.,59.,60.,61.,62.,12.,16.,17.,18.,19.,20.,21.,22.,23.,24.,26.,28.,30.,32.,33.,36.,37.,38.,39.,40.,41.,42.,43.,44.,45.,46.,47.,48.,49.,50.,51.,52.,53.,54.,55.,56.,57.,58.,59.,60.,61.,62.,38.,54.,63.,24.,26.,28.,30.,32.,54.,62.,33.,38.,54.,63.,16.,16.,16.,16.,16.,16.,16.,16.,16.,16.,16.,16.,5.,13.,14.,12.,15.,15.,15.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,16.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,14.,14.,1.,1.,1.,1.,1.,1.,1.,1.,6.,6.,6.,6.,13.,6.,13.,16.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,4.,2.,9.,7.,10.,10.,10.,10.,3.,8.,11.,4.,2.,9.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-5.,-5.,-5.,-5.,-5.,-5.,-5.,-5.,-17.,-17.,-5.,-5.,-5.,-5.,0.,16.,33.,148.,244.,274.,275.,289.,433.,480.,690.,703.,943.,945.,947.,1012.,1017.,1049.,0.,.0625,.125,.1875,.25,.3125,.375,.4375,.5,.5625,.625,.6875,.75,.8125,.875,.9375,0.,.0625,.125,.1875,.25,.3125,.375,.4375,.5,.5,.5625,.625,.6875,.75,.8125,.875,.9375,0.,.125,.25,.375,.5,.625,.75,.875,1.,1.375,1.5,1.75,1.875,2.125,2.25,2.375,2.5,2.75,3.,3.25,3.5,3.75,4.,4.125,4.25,4.375,4.5,4.625,4.75,4.875,5.,5.375,5.5,5.75,6.,6.25,6.625,6.75,7.,7.25,7.375,7.5,7.625,7.75,7.875,8.,8.125,8.25,8.375,8.5,8.625,8.75,8.875,9.,9.375,9.5,9.625,9.75,9.75,9.875,9.875,10.,10.125,10.25,10.375,10.375,10.5,10.5,10.75,10.75,11.,11.,11.125,11.25,11.25,11.375,11.5,11.625,11.75,11.75,11.875,12.,12.,12.125,12.25,12.375,12.375,12.5,12.5,12.625,12.625,12.75,12.75,12.875,12.875,13.,13.,13.25,13.375,13.375,13.5,13.625,13.75,14.,14.,14.25,14.25,14.625,14.625,14.75,14.75,14.875,15.,15.25,15.5,0.,.25,.375,.5,.625,.875,1.,1.25,1.375,1.5,1.625,1.875,2.,2.21875,2.34375,2.46875,2.59375,2.875,3.,3.25,3.375,3.5,3.625,3.875,4.,4.25,4.375,4.5,4.625,4.875,5.,5.25,5.375,5.5,5.625,5.875,6.,6.25,6.375,6.5,6.625,6.875,7.,7.25,7.375,7.5,7.625,7.875,8.,8.25,8.375,8.5,8.625,8.875,9.,9.25,9.375,9.5,9.625,9.875,10.,10.25,10.375,10.5,10.625,10.875,11.,11.25,11.375,11.5,11.625,11.875,12.,12.25,12.375,12.5,12.625,12.875,13.,13.25,13.375,13.5,13.625,13.875,14.,14.25,14.375,14.5,14.625,14.875,15.,15.25,15.375,15.5,15.625,15.875,0.,.125,.25,.375,.5,.625,.75,.875,.90625,1.,1.,1.03125,1.125,1.15625,1.15625,1.25,1.25,1.28125,1.375,1.40625,1.40625,1.5,1.5,1.53125,1.625,1.65625,1.65625,1.75,1.78125,1.90625,0.,0.,0.,.25,.625,.625,.75,1.,1.,1.25,1.625,1.625,1.8125,1.875,1.9375,0.,.25,.375,.5,.625,.875,1.,1.25,1.375,1.5,1.625,1.875,2.,2.25,2.375,2.5,2.625,2.875,3.,3.25,3.375,3.5,3.625,3.875,4.,4.25,4.375,4.5,4.625,4.875,5.,5.25,5.375,5.5,5.625,5.875,6.,6.25,6.375,6.5,6.625,6.875,7.,7.25,7.375,7.5,7.625,7.875,8.,8.25,8.375,8.5,8.625,8.875,9.,9.25,9.375,9.5,9.625,9.875,10.,10.25,10.375,10.5,10.625,10.875,11.,11.25,11.375,11.5,11.625,11.875,12.,12.25,12.375,12.5,12.625,12.875,13.,13.25,13.375,13.5,13.625,13.875,14.,14.25,14.375,14.5,14.625,14.875,15.,15.25,15.375,15.5,15.625,15.875,16.,16.25,16.375,16.5,16.625,16.875,17.,17.25,17.375,17.5,17.625,17.875,18.,18.25,18.375,18.5,18.625,18.875,19.,19.25,19.375,19.5,19.625,19.875,20.,20.25,20.375,20.5,20.625,20.875,21.,21.25,21.375,21.5,21.625,21.875,22.,22.25,22.375,22.5,22.625,22.875,23.,23.25,23.375,23.5,23.625,23.875,0.,.25,.375,.5,.625,.875,1.,1.25,1.375,1.5,1.625,1.875,2.,2.21875,2.34375,2.46875,2.59375,2.875,3.,3.25,3.375,3.5,3.625,3.875,4.,4.25,4.375,4.5,4.625,4.875,5.,5.25,5.375,5.5,5.625,5.875,6.,6.25,6.375,6.5,6.625,6.875,7.,7.25,7.375,7.5,7.625,0.,.125,.1875,.25,.3125,.375,.375,.4375,.5,.5,.5625,.625,.625,.6875,.75,.75,.8125,.875,.875,.9375,1.,1.,1.0625,1.125,1.1875,1.25,1.375,1.375,1.5,1.5625,1.625,1.6875,1.75,1.75,1.75,1.8125,1.875,1.875,1.875,1.9375,1.9375,2.,2.,2.0625,2.0625,2.125,2.125,2.125,2.1875,2.25,2.25,2.25,2.3125,2.375,2.375,2.375,2.4375,2.5,2.5,2.5,2.5625,2.5625,2.625,2.6875,2.6875,2.75,2.75,2.75,2.75,2.875,2.875,2.9375,2.9375,3.,3.,3.125,3.125,3.125,3.1875,3.1875,3.25,3.25,3.3125,3.375,3.375,3.375,3.4375,3.4375,3.5,3.5,3.5625,3.625,3.625,3.625,3.6875,3.75,3.75,3.75,3.8125,3.875,3.875,3.9375,3.9375,4.,4.,4.,4.0625,4.125,4.125,4.125,4.1875,4.1875,4.25,4.25,4.3125,4.375,4.375,4.375,4.375,4.4375,4.5,4.5,4.5,4.5625,4.5625,4.625,4.625,4.625,4.6875,4.6875,4.75,4.75,4.75,4.75,4.8125,4.8125,4.875,4.875,4.875,4.875,4.9375,4.9375,5.,5.,5.,5.,5.0625,5.0625,5.125,5.125,5.1875,5.1875,5.25,5.25,5.25,5.375,5.375,5.375,5.375,5.4375,5.5,5.5625,5.5625,5.625,5.625,5.6875,5.75,5.75,5.75,5.8125,5.875,5.9375,6.,6.,6.,6.125,6.1875,6.1875,6.25,6.25,6.375,6.375,6.4375,6.4375,6.625,6.625,6.625,6.625,6.75,6.75,6.8125,6.8125,6.875,6.9375,6.9375,7.,7.,7.,7.0625,7.125,7.125,7.1875,7.25,7.25,7.375,7.4375,7.5,7.625,7.6875,7.875,0.,.25,.375,.5,.625,.875,1.,1.25,1.375,1.5,1.625,1.875,2.,0.,.1875,.375,.375,.5,.5625,.6875,.75,.75,.875,.9375,1.,1.125,1.125,1.1875,1.25,1.3125,1.375,1.375,1.4375,1.5,1.5625,1.625,1.625,1.75,1.75,1.8125,1.875,1.9375,2.,2.,2.0625,2.125,2.1875,2.25,2.375,2.375,2.5,2.5625,2.6875,2.75,2.75,2.875,2.9375,3.,3.125,3.1875,3.25,3.375,3.375,3.4375,3.5625,3.625,3.625,3.75,3.8125,3.875,4.,4.,4.0625,4.1875,4.25,4.375,4.375,4.5,4.5625,4.6875,4.75,4.75,4.875,4.9375,5.,5.125,5.125,5.1875,5.25,5.3125,5.375,5.375,5.4375,5.5,5.5625,5.625,5.625,5.75,5.75,5.8125,5.875,5.9375,6.,6.,6.0625,6.125,6.1875,6.25,6.375,6.375,6.5,6.5625,6.6875,6.75,6.75,6.875,6.9375,7.,7.125,7.1875,7.25,7.375,7.375,7.4375,7.5625,7.625,7.625,7.75,7.8125,7.875,8.,8.,8.0625,8.1875,8.25,8.375,8.375,8.5,8.5625,8.6875,8.75,8.75,8.875,8.9375,9.,9.125,9.125,9.1875,9.25,9.3125,9.375,9.375,9.4375,9.5,9.5625,9.625,9.625,9.75,9.75,9.8125,9.875,9.9375,10.,10.,10.0625,10.125,10.1875,10.25,10.375,10.375,10.5,10.5625,10.6875,10.75,10.75,10.875,10.9375,11.,11.125,11.1875,11.25,11.375,11.375,11.4375,11.5625,11.625,11.625,11.75,11.8125,11.875,12.,12.,12.0625,12.1875,12.25,12.375,12.375,12.5,12.5625,12.6875,12.75,12.75,12.875,12.9375,13.,13.125,13.125,13.1875,13.25,13.3125,13.375,13.375,13.4375,13.5,13.5625,13.625,13.625,13.75,13.75,13.8125,13.875,13.9375,14.,14.,14.0625,14.125,14.1875,14.25,14.375,14.375,14.5,14.5625,14.6875,14.75,14.75,14.875,14.9375,15.,15.125,15.1875,15.25,15.375,15.375,15.4375,15.5625,15.625,15.625,15.75,15.8125,15.875,16.,16.0625,16.25,0.,0.,0.,0.,0.,0.,.0625,.125,.1875,.25,.3125,.375,.4375,.5,.5625,.625,.6875,.75,.8125,.875,.9375,1.,1.0625,1.125,1.1875,1.25,1.3125,1.375,1.4375,1.5,1.5625,1.625,1.625,1.6875,1.75,1.8125,1.875,1.875,1.9375,2.,2.,2.0625,2.125,2.1875,2.25,2.3125,2.375,2.4375,2.5,2.5625,2.625,2.6875,2.75,2.8125,2.875,2.9375,3.,3.0625,3.125,3.1875,3.25,3.3125,3.375,3.5,3.5,3.625,3.75,3.75,3.875,0.,.5,1.5,2.5,3.5,0.,.03125,.0625,.09375,.125,.15625,.1875,.21875,.25,.28125,.3125,.34375,.375,.40625,.4375,.46875,.5,.53125,.5625,.59375,.625,.65625,.6875,.71875,.75,.78125,.8125,.84375,.875,.90625,.9375,.96875,.0625,.125,.1875,.25,.3125,.375,.4375,.5,.5625,.625,.6875,.75,.8125,.875,.9375,1.,.09375,.09375,.1875,.21875,.34375,.34375,.4375,.46875,.59375,.8125,.59375,.6875,.71875,.84375,.84375,.9375,.96875,.125,.25,.375,.5,.625,.75,.875,1.,1.125,1.5,1.625,1.875,2.,2.25,2.375,2.5,2.625,2.875,3.125,3.375,3.625,3.875,4.125,4.25,4.375,4.5,4.625,4.75,4.875,5.,5.125,5.5,5.625,5.875,6.125,6.375,6.75,6.875,7.125,7.375,7.4375,7.625,7.6875,7.875,7.9375,8.125,8.25,8.375,8.5,8.625,8.75,8.875,9.,9.125,9.5,9.625,9.75,9.875,9.875,10.,10.,10.125,10.25,10.375,10.5,10.5,10.625,10.625,10.875,10.875,11.125,11.125,11.25,11.375,11.375,11.5,11.625,11.75,11.875,11.875,12.,12.125,12.125,12.25,12.375,12.5,12.5,12.625,12.625,12.75,12.75,12.875,12.875,13.,13.,13.125,13.125,13.375,13.5,13.5,13.625,13.75,13.875,14.125,14.125,14.375,14.375,14.75,14.75,14.875,14.875,15.,15.125,15.375,15.625,.1875,.375,.5,.625,.75,1.,1.1875,1.375,1.5,1.625,1.75,2.,2.1875,2.34375,2.46875,2.59375,2.71875,3.,3.1875,3.375,3.5,3.625,3.75,4.,4.1875,4.375,4.5,4.625,4.75,5.,5.1875,5.375,5.5,5.625,5.75,6.,6.1875,6.375,6.5,6.625,6.75,7.,7.1875,7.375,7.5,7.625,7.75,8.,8.1875,8.375,8.5,8.625,8.75,9.,9.1875,9.375,9.5,9.625,9.75,10.,10.1875,10.375,10.5,10.625,10.75,11.,11.1875,11.375,11.5,11.625,11.75,12.,12.1875,12.375,12.5,12.625,12.75,13.,13.1875,13.375,13.5,13.625,13.75,14.,14.1875,14.375,14.5,14.625,14.75,15.,15.1875,15.375,15.5,15.625,15.75,16.,.125,.25,.375,.5,.625,.75,.875,.9375,.96875,1.0625,1.0625,1.09375,1.1875,1.21875,1.21875,1.3125,1.3125,1.34375,1.4375,1.46875,1.46875,1.5625,1.5625,1.59375,1.6875,1.71875,1.71875,1.8125,1.84375,1.96875,4.,.03125,.375,.625,.65625,1.,1.125,1.03125,1.375,1.625,1.65625,1.875,1.9375,2.,2.,.1875,.375,.5,.625,.75,1.,1.1875,1.375,1.5,1.625,1.75,2.,2.1875,2.375,2.5,2.625,2.75,3.,3.1875,3.375,3.5,3.625,3.75,4.,4.1875,4.375,4.5,4.625,4.75,5.,5.1875,5.375,5.5,5.625,5.75,6.,6.1875,6.375,6.5,6.625,6.75,7.,7.1875,7.375,7.5,7.625,7.75,8.,8.1875,8.375,8.5,8.625,8.75,9.,9.1875,9.375,9.5,9.625,9.75,10.,10.1875,10.375,10.5,10.625,10.75,11.,11.1875,11.375,11.5,11.625,11.75,12.,12.1875,12.375,12.5,12.625,12.75,13.,13.1875,13.375,13.5,13.625,13.75,14.,14.1875,14.375,14.5,14.625,14.75,15.,15.1875,15.375,15.5,15.625,15.75,16.,16.1875,16.375,16.5,16.625,16.75,17.,17.1875,17.375,17.5,17.625,17.75,18.,18.1875,18.375,18.5,18.625,18.75,19.,19.1875,19.375,19.5,19.625,19.75,20.,20.1875,20.375,20.5,20.625,20.75,21.,21.1875,21.375,21.5,21.625,21.75,22.,22.1875,22.375,22.5,22.625,22.75,23.,23.1875,23.375,23.5,23.625,23.75,24.,.1875,.375,.5,.625,.75,1.,1.1875,1.375,1.5,1.625,1.75,2.,2.1875,2.34375,2.46875,2.59375,2.71875,3.,3.1875,3.375,3.5,3.625,3.75,4.,4.1875,4.375,4.5,4.625,4.75,5.,5.1875,5.375,5.5,5.625,5.75,6.,6.1875,6.375,6.5,6.625,6.75,7.,7.1875,7.375,7.5,7.625,7.75,.125,.25,.3125,.375,.4375,.5,.5,.5625,.625,.625,.6875,.75,.75,.8125,.875,.875,.9375,1.,1.,1.0625,1.125,1.125,1.1875,1.25,1.3125,1.375,1.5,1.5,1.625,1.6875,1.75,1.8125,1.875,1.875,1.875,1.9375,2.,2.,2.,2.0625,2.0625,2.125,2.125,2.1875,2.1875,2.25,2.25,2.25,2.3125,2.375,2.375,2.375,2.4375,2.5,2.5,2.5,2.5625,2.625,2.625,2.625,2.6875,2.6875,2.75,2.8125,2.8125,2.875,2.875,2.875,2.875,3.,3.,3.0625,3.0625,3.125,3.125,3.25,3.25,3.25,3.3125,3.3125,3.375,3.375,3.4375,3.5,3.5,3.5,3.5625,3.5625,3.625,3.625,3.6875,3.75,3.75,3.75,3.8125,3.875,3.875,3.875,3.9375,4.,4.,4.0625,4.0625,4.125,4.125,4.125,4.1875,4.25,4.25,4.25,4.3125,4.3125,4.375,4.375,4.4375,4.5,4.5,4.5,4.5,4.5625,4.625,4.625,4.625,4.6875,4.6875,4.75,4.75,4.75,4.8125,4.8125,4.875,4.875,4.875,4.875,4.9375,4.9375,5.,5.,5.,5.,5.0625,5.0625,5.125,5.125,5.125,5.125,5.1875,5.1875,5.25,5.25,5.3125,5.3125,5.375,5.375,5.375,5.5,5.5,5.5,5.5,5.5625,5.625,5.6875,5.6875,5.75,5.75,5.8125,5.875,5.875,5.875,5.9375,6.,6.0625,6.125,6.125,6.125,6.25,6.3125,6.3125,6.375,6.375,6.5,6.5,6.5625,6.5625,6.75,6.75,6.75,6.75,6.875,6.875,6.9375,6.9375,7.,7.0625,7.0625,7.125,7.125,7.125,7.1875,7.25,7.25,7.3125,7.375,7.375,7.5,7.5625,7.625,7.75,7.8125,8.,.1875,.4375,.5,.6875,.75,1.,1.1875,1.4375,1.5,1.6875,1.75,2.,2.,.125,.3125,.5,.5,.625,.6875,.8125,.875,.875,1.,1.0625,1.125,1.25,1.25,1.3125,1.375,1.4375,1.5,1.5,1.5625,1.625,1.6875,1.75,1.75,1.875,1.875,1.9375,2.,2.0625,2.125,2.125,2.1875,2.25,2.3125,2.375,2.5,2.5,2.625,2.6875,2.8125,2.875,2.875,3.,3.0625,3.125,3.25,3.3125,3.375,3.5,3.5,3.5625,3.6875,3.75,3.75,3.875,3.9375,4.,4.125,4.125,4.1875,4.3125,4.375,4.5,4.5,4.625,4.6875,4.8125,4.875,4.875,5.,5.0625,5.125,5.25,5.25,5.3125,5.375,5.4375,5.5,5.5,5.5625,5.625,5.6875,5.75,5.75,5.875,5.875,5.9375,6.,6.0625,6.125,6.125,6.1875,6.25,6.3125,6.375,6.5,6.5,6.625,6.6875,6.8125,6.875,6.875,7.,7.0625,7.125,7.25,7.3125,7.375,7.5,7.5,7.5625,7.6875,7.75,7.75,7.875,7.9375,8.,8.125,8.125,8.1875,8.3125,8.375,8.5,8.5,8.625,8.6875,8.8125,8.875,8.875,9.,9.0625,9.125,9.25,9.25,9.3125,9.375,9.4375,9.5,9.5,9.5625,9.625,9.6875,9.75,9.75,9.875,9.875,9.9375,10.,10.0625,10.125,10.125,10.1875,10.25,10.3125,10.375,10.5,10.5,10.625,10.6875,10.8125,10.875,10.875,11.,11.0625,11.125,11.25,11.3125,11.375,11.5,11.5,11.5625,11.6875,11.75,11.75,11.875,11.9375,12.,12.125,12.125,12.1875,12.3125,12.375,12.5,12.5,12.625,12.6875,12.8125,12.875,12.875,13.,13.0625,13.125,13.25,13.25,13.3125,13.375,13.4375,13.5,13.5,13.5625,13.625,13.6875,13.75,13.75,13.875,13.875,13.9375,14.,14.0625,14.125,14.125,14.1875,14.25,14.3125,14.375,14.5,14.5,14.625,14.6875,14.8125,14.875,14.875,15.,15.0625,15.125,15.25,15.3125,15.375,15.5,15.5,15.5625,15.6875,15.75,15.75,15.875,15.9375,16.,16.125,16.1875,16.375,2.,4.,1.,1.,.125,.125,.1875,.25,.3125,.375,.4375,.5,.5625,.625,.6875,.75,.8125,.875,.9375,1.,1.0625,1.125,1.1875,1.25,1.3125,1.375,1.4375,1.5,1.5625,1.625,1.6875,1.75,1.75,1.8125,1.875,1.9375,2.,2.,2.0625,2.125,2.125,2.1875,2.25,2.3125,2.375,2.4375,2.5,2.5625,2.625,2.6875,2.75,2.8125,2.875,2.9375,3.,3.0625,3.125,3.1875,3.25,3.3125,3.375,3.4375,3.5,3.625,3.625,3.75,3.875,3.875,4.,.75,1.25,2.25,3.25,4.,.03125,.0625,.09375,.125,.1875,.1875,.21875,.25,.28125,.3125,.34375,.375,.40625,.4375,.46875,.5,.53125,.5625,.59375,.625,.6875,.6875,.71875,.75,.78125,.8125,.84375,.875,.90625,.9375,.96875,1.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,5.,32.,21.,21.,21.,32.,21.,21.,21.,32.,33.,21.,21.,21.,32.,21.,21.,21.,52.,51.,52.,51.,52.,47.,50.,48.,45.,40.,45.,45.,47.,45.,47.,45.,47.,45.,48.,45.,45.,43.,52.,51.,52.,51.,52.,47.,50.,48.,45.,40.,45.,45.,47.,43.,48.,47.,45.,27.,33.,36.,39.,40.,43.,52.,51.,52.,51.,52.,47.,50.,48.,45.,40.,45.,48.,57.,45.,52.,47.,64.,45.,47.,60.,45.,62.,47.,57.,45.,60.,48.,64.,62.,45.,55.,45.,57.,59.,43.,60.,64.,52.,51.,52.,60.,51.,62.,52.,60.,47.,62.,50.,64.,48.,57.,45.,57.,60.,40.,45.,57.,45.,62.,47.,55.,43.,55.,48.,59.,47.,60.,45.,57.,45.,21.,9.,21.,9.,21.,21.,21.,9.,21.,9.,21.,28.,28.,16.,28.,16.,28.,29.,29.,17.,29.,17.,24.,24.,24.,12.,24.,12.,19.,21.,21.,9.,21.,9.,21.,19.,19.,7.,19.,7.,19.,21.,21.,9.,21.,9.,21.,21.,21.,9.,21.,9.,21.,21.,21.,9.,21.,9.,21.,28.,28.,16.,28.,16.,28.,29.,29.,17.,29.,17.,24.,24.,24.,12.,24.,12.,19.,21.,21.,9.,21.,9.,21.,19.,19.,7.,19.,7.,19.,21.,21.,9.,21.,9.,21.,21.,52.,51.,52.,51.,52.,47.,50.,48.,50.,45.,50.,48.,48.,45.,50.,45.,50.,48.,48.,45.,50.,45.,50.,48.,48.,45.,50.,45.,48.,45.,34.,0.,32.,27.,0.,32.,27.,0.,32.,27.,0.,32.,27.,32.,27.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,9.,9.,21.,9.,21.,9.,21.,9.,21.,9.,21.,21.,21.,9.,21.,9.,21.,28.,28.,16.,28.,16.,28.,29.,29.,17.,29.,17.,24.,24.,24.,12.,24.,12.,19.,21.,21.,9.,21.,9.,21.,19.,19.,7.,19.,7.,19.,21.,21.,9.,21.,9.,21.,52.,51.,52.,52.,51.,52.,51.,52.,52.,51.,51.,52.,47.,52.,51.,50.,47.,52.,48.,50.,47.,45.,48.,50.,45.,48.,45.,40.,45.,40.,48.,45.,57.,45.,40.,48.,52.,47.,45.,57.,45.,64.,48.,52.,47.,57.,45.,45.,64.,52.,47.,47.,45.,64.,60.,45.,47.,62.,47.,45.,60.,45.,47.,62.,47.,60.,57.,45.,45.,62.,47.,57.,45.,60.,48.,64.,57.,45.,60.,48.,62.,45.,64.,60.,55.,48.,62.,45.,64.,45.,55.,62.,57.,45.,45.,59.,55.,43.,57.,60.,45.,59.,43.,64.,57.,52.,60.,59.,51.,43.,64.,52.,60.,52.,51.,64.,60.,52.,51.,52.,62.,52.,51.,60.,51.,60.,52.,47.,62.,52.,62.,60.,51.,50.,60.,47.,64.,62.,52.,48.,62.,50.,60.,57.,47.,45.,64.,48.,62.,50.,57.,45.,64.,57.,48.,60.,57.,45.,40.,57.,45.,60.,40.,57.,57.,45.,60.,45.,40.,57.,45.,45.,62.,57.,47.,45.,62.,47.,55.,43.,62.,47.,55.,43.,55.,55.,48.,43.,59.,47.,55.,48.,60.,59.,47.,55.,48.,45.,60.,59.,47.,45.,60.,57.,45.,57.,45.,57.,45.,45.,21.,9.,21.,9.,21.,21.,21.,9.,21.,9.,21.,21.,21.,64.,64.,64.,60.,62.,60.,62.,60.,57.,62.,57.,60.,64.,57.,60.,62.,64.,60.,55.,62.,64.,55.,62.,57.,59.,55.,57.,60.,59.,64.,57.,60.,59.,64.,60.,64.,60.,62.,60.,62.,62.,60.,62.,62.,57.,62.,57.,57.,60.,57.,57.,60.,57.,57.,60.,57.,52.,64.,57.,52.,64.,52.,64.,60.,62.,60.,62.,60.,57.,62.,57.,60.,64.,57.,60.,62.,64.,60.,55.,62.,64.,55.,62.,57.,59.,55.,57.,60.,59.,64.,57.,60.,59.,64.,60.,64.,60.,62.,60.,62.,62.,60.,62.,62.,57.,62.,57.,57.,60.,57.,57.,60.,57.,57.,60.,57.,52.,64.,57.,52.,64.,52.,64.,60.,62.,60.,62.,60.,57.,62.,57.,60.,64.,57.,60.,62.,64.,60.,55.,62.,64.,55.,62.,57.,59.,55.,57.,60.,59.,64.,57.,60.,59.,64.,60.,64.,60.,62.,60.,62.,62.,60.,62.,62.,57.,62.,57.,57.,60.,57.,57.,60.,57.,57.,60.,57.,52.,64.,57.,52.,64.,52.,64.,60.,62.,60.,62.,60.,57.,62.,57.,60.,64.,57.,60.,62.,64.,60.,55.,62.,64.,55.,62.,57.,59.,55.,57.,60.,59.,64.,57.,60.,59.,64.,60.,64.,60.,62.,60.,62.,62.,60.,62.,62.,57.,62.,57.,57.,60.,57.,57.,60.,57.,57.,60.,57.,52.,57.,52.,52.,31.,37.,27.,31.,28.,32.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,32.,27.,28.,27.,28.,32.,27.,28.,32.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,27.,28.,28.,32.,28.,28.,32.,28.,18.,33.,33.,33.,33.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,4.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,.5,1.,.5,1.,.5,1.,.5,1.,.5,1.,.5,1.,.5,1.,.5,1.,.300048828125,.300048828125,1.,.300048828125,.300048828125,.300048828125,1.,.300048828125,.300048828125,.300048828125,.300048828125,1.,.300048828125,.300048828125,.300048828125,1.,.300048828125,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,.89990234375,1.,.89990234375,1.,1.,1.,1.,.300048828125,1.,.7998046875,.300048828125,.7998046875,.300048828125,.1500244140625,.7998046875,.5498046875,.1500244140625,.5498046875,.1500244140625,.08001708984375,.5498046875,.25,.08001708984375,.25,.08001708984375,.0200042724609375,.25,.0200042724609375,.0200042724609375,.43994140625,.7001953125,.39990234375,.75,.7001953125,.39990234375,.75,.7001953125,.39990234375,.75,.7001953125,.39990234375,.280029296875,.25,.39990234375,.199951171875,.2099609375,.22998046875,.239990234375,.260009765625,.2900390625,.2900390625,.300048828125,.31005859375,.31005859375,.31005859375,.31005859375,.31005859375,.360107421875,.3701171875,.3701171875,.3798828125,.389892578125,.39990234375,.419921875,.419921875,.419921875,.449951171875,.469970703125,.47998046875,.5,.509765625,.509765625,.52978515625,.5400390625,.5498046875,.5498046875,.5498046875,.5498046875,.5498046875,.5498046875,.5498046875,.5498046875,.5400390625,.5400390625,.5400390625,.56005859375,.52978515625,.580078125,.580078125,.58984375,.60986328125,.60986328125,.6201171875,.6298828125,.6298828125,.64990234375,.64990234375,.66015625,.669921875,.669921875,.669921875,.669921875,.68017578125,.68017578125,.68994140625,.68994140625,.68994140625,.72021484375,.72998046875,.72998046875,.72998046875,.72998046875,.72998046875,.75,.740234375,.740234375,.740234375,.72998046875,.72998046875,.72998046875,.72998046875,.72998046875,.72998046875,.72998046875,.72998046875,.75,.759765625,.759765625,.759765625,.759765625,.759765625,.759765625,.759765625,.759765625,.759765625,.759765625,.759765625,.77978515625,.77978515625,.7900390625,.7900390625,.7900390625,.7900390625,.7900390625,.7900390625,.7998046875,.7998046875,.81005859375,.81982421875,.81982421875,.81982421875,.81005859375,.81005859375,.81982421875,.81982421875,.81982421875,.81982421875,.830078125,.83984375,.83984375,.83984375,.85009765625,.85009765625,.85986328125,.8798828125,.89990234375,.89990234375,.89990234375,.89990234375,.89990234375,.89990234375,.91015625,.919921875,.919921875,.93017578125,.93017578125,.93017578125,.93994140625,.9501953125,.9599609375,.9599609375,.9599609375,.9599609375,.990234375,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,.27001953125,1.,.27001953125,.0999755859375,1.,.27001953125,1.,.0999755859375,.27001953125,.0999755859375,1.,.27001953125,.0999755859375,1.,.27001953125,.0999755859375,1.,.27001953125,.0999755859375,1.,.27001953125,.0999755859375,.27001953125,.0999755859375,.0999755859375,1.,1.,.27001953125,1.,.27001953125,1.,1.,.0999755859375,.27001953125,1.,1.,.0999755859375,.27001953125,.27001953125,1.,.0999755859375,.27001953125,.27001953125,.0999755859375,.0999755859375,1.,.27001953125,.0999755859375,.0999755859375,1.,.27001953125,.0999755859375,1.,1.,.27001953125,1.,1.,.0999755859375,.27001953125,.27001953125,.0999755859375,.27001953125,.27001953125,.0999755859375,1.,.0999755859375,1.,.0999755859375,.0999755859375,.27001953125,.27001953125,1.,1.,1.,.0999755859375,.0999755859375,.27001953125,.27001953125,1.,1.,.27001953125,.0999755859375,1.,.0999755859375,.27001953125,.27001953125,.0999755859375,1.,.27001953125,.0999755859375,1.,.0999755859375,.27001953125,1.,.0999755859375,1.,.27001953125,1.,.0999755859375,.27001953125,.27001953125,1.,.0999755859375,1.,.27001953125,.0999755859375,1.,.0999755859375,.27001953125,.27001953125,.0999755859375,1.,.27001953125,.0999755859375,1.,.0999755859375,1.,.27001953125,1.,1.,.0999755859375,.27001953125,.27001953125,1.,.0999755859375,1.,.27001953125,.27001953125,1.,.0999755859375,.0999755859375,1.,.27001953125,.27001953125,1.,.0999755859375,.0999755859375,1.,.27001953125,.27001953125,.0999755859375,1.,.0999755859375,1.,.27001953125,.27001953125,.0999755859375,.0999755859375,.27001953125,.27001953125,.0999755859375,1.,.0999755859375,1.,.0999755859375,.0999755859375,1.,.27001953125,1.,.27001953125,.27001953125,.0999755859375,1.,.27001953125,.0999755859375,1.,.0999755859375,.27001953125,.0999755859375,.27001953125,1.,.0999755859375,1.,.0999755859375,.27001953125,.27001953125,1.,1.,.0999755859375,.0999755859375,.27001953125,.27001953125,.0999755859375,1.,1.,.0999755859375,1.,1.,.27001953125,.27001953125,1.,.27001953125,.27001953125,.0999755859375,.0999755859375,1.,.27001953125,.0999755859375,.0999755859375,.27001953125,.0999755859375,1.,.0999755859375,.27001953125,1.,.0999755859375,.27001953125,.0999755859375,1.099609375,1.2001953125,1.099609375,1.2001953125,1.099609375,1.099609375,1.099609375,1.2001953125,1.099609375,1.2001953125,1.099609375,1.099609375,1.2001953125,1.,.27001953125,.1099853515625,1.,1.,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,1.,.27001953125,.1099853515625,1.,.27001953125,.1099853515625,.27001953125,.1099853515625,1.,1.,.1099853515625,.27001953125,1.,.27001953125,1.,.1099853515625,.27001953125,.1099853515625,.27001953125,.1099853515625,.1099853515625,1.,1.,.27001953125,.27001953125,1.,.1099853515625,.1099853515625,.27001953125,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,.27001953125,.1099853515625,.1099853515625,1.,1.,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,1.,.27001953125,.1099853515625,1.,.27001953125,.1099853515625,.27001953125,.1099853515625,1.,1.,.1099853515625,.27001953125,1.,.27001953125,1.,.1099853515625,.27001953125,.1099853515625,.27001953125,.1099853515625,.1099853515625,1.,1.,.27001953125,.27001953125,1.,.1099853515625,.1099853515625,.27001953125,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,.27001953125,.1099853515625,.1099853515625,1.,1.,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,1.,.27001953125,.1099853515625,1.,.27001953125,.1099853515625,.27001953125,.1099853515625,1.,1.,.1099853515625,.27001953125,1.,.27001953125,1.,.1099853515625,.27001953125,.1099853515625,.27001953125,.1099853515625,.1099853515625,1.,1.,.27001953125,.27001953125,1.,.1099853515625,.1099853515625,.27001953125,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,.27001953125,.1099853515625,.1099853515625,1.,1.,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,1.,.27001953125,.1099853515625,1.,.27001953125,.1099853515625,.27001953125,.1099853515625,1.,1.,.1099853515625,.27001953125,1.,.27001953125,1.,.1099853515625,.27001953125,.1099853515625,.27001953125,.1099853515625,.1099853515625,1.,1.,.27001953125,.27001953125,1.,.1099853515625,.1099853515625,.27001953125,1.,.1099853515625,.27001953125,1.,1.,.1099853515625,.27001953125,.27001953125,.1099853515625,1.,.1099853515625,.27001953125,1.,.1099853515625,.27001953125,.1099853515625,.4599609375,.43994140625,.60009765625,.35009765625,.0999755859375,.260009765625,.1199951171875,.199951171875,.1199951171875,.39990234375,.1199951171875,.1600341796875,.1400146484375,.340087890625,.1400146484375,.419921875,.1400146484375,.239990234375,.1400146484375,.419921875,.1500244140625,.56005859375,.1700439453125,.320068359375,.1700439453125,.56005859375,.1700439453125,.1400146484375,.199951171875,.280029296875,.199951171875,.360107421875,.360107421875,.320068359375,.280029296875,.320068359375,.360107421875,.360107421875,.360107421875,.60009765625,.47998046875,.360107421875,.239990234375,.360107421875,.39990234375,.360107421875,.239990234375,.39990234375,.300048828125,.39990234375,.239990234375,.39990234375,.56005859375,.39990234375,.239990234375,.429931640625,.60009765625,.429931640625,.239990234375,.429931640625,.56005859375,.429931640625,.219970703125,.0999755859375,.360107421875,.419921875,.239990234375,.419921875,.5400390625,.300048828125,.300048828125,.239990234375,.1400146484375,.07000732421875,.35009765625,.22998046875,.72998046875,.280029296875,1.2001953125,.199951171875,.4599609375,.320068359375,.4599609375,.22998046875,.72998046875,.280029296875,1.2001953125,.199951171875,.4599609375,.320068359375,.4599609375,.22998046875,.72998046875,.280029296875,1.2001953125,.199951171875,.4599609375,.320068359375,.4599609375,.22998046875,.72998046875,.280029296875,1.2001953125,.199951171875,.4599609375,.320068359375,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,.5,.199951171875,.1500244140625,.199951171875,.199951171875,.199951171875,.1500244140625,.199951171875,.199951171875,.199951171875,.1500244140625,.199951171875,0.,0.,.39990234375,0.,.39990234375,.39990234375,.199951171875,.39990234375,.39990234375,.199951171875,.39990234375,.39990234375,0.,.1500244140625,.5,.5,.5,.5);


float doubleslope(float t, float a, float d, float s)
{
    return smoothstep(-.00001,a,t) - (1.-s) * smoothstep(0.,d,t-a);
}

float drop_phase(float time, float t1, float f0, float f1)
{
    float t = min(time, t1);
    float phi = f0*t + .5*(f1-f0)/t1*t*t;

    if(time > t1)
    {
        phi += f1 * (time - t1);
    }
    return phi;
}



// One-dimensional value noise from https://www.shadertoy.com/view/wdj3D1 (NR4)

float lpnoise(float t, float fq) // kudos to Dmitry Andreev - and'2014!
{
    t *= fq;

    float tt = fract(t);
    float tn = t - tt;
    tt = smoothstep(0.0, 1.0, tt);

    // does pseudorandom(...) somehow equal hash22 noise?
    float n0 = pseudorandom(floor(tn + 0.0) / fq);
    float n1 = pseudorandom(floor(tn + 1.0) / fq);

    return mix(n0, n1, tt);
}

float reverb_phase(float t, float amt)
{
    float r = lpnoise(t, 100.0) + 0.2*lpnoise(t, 550.0) + 0.1*lpnoise(t, 1050.0)*exp(-5.*t);
    return amt * r;
}

float env_AHDSR(float x, float L, float A, float H, float D, float S, float R)
{
    float att = x/A;
    float dec = 1. - (1.-S)*(x-H-A)/D;
    float rel = (x <= L-R) ? 1. : (L-x)/R;
    return (x<A ? att : x<A+H ? 1 : x<A+H+D ? dec : x<=L-R ? S : x<=L ? (L-x)/R : 0.);
}


float s_atan(float a) { return 2./PI * atan(a); }
float squarey(float a, float edge) { return abs(a) < edge ? a : floor(4.*a+.5)*.25; } 

float waveshape(float s, float amt, float A, float B, float C, float D, float E)
{
    float w;
    float m = sign(s);
    s = abs(s);

    if(s<A) w = B * smoothstep(0.,A,s);
    else if(s<C) w = C + (B-C) * smoothstep(C,A,s);
    else if(s<=D) w = s;
    else if(s<=1.)
    {
        float _s = (s-D)/(1.-D);
        w = D + (E-D) * (1.5*_s*(1.-.33*_s*_s));
    }
    else return 1.;
    
    return m*mix(s,w,amt);
}


float comp_SAW(int N, float inv_N) {return inv_N * minus1hochN(N);}
float comp_TRI(int N, float inv_N) {return N % 2 == 0 ? 0. : inv_N * inv_N * minus1hochNminus1halbe(N);}
float comp_SQU(int N, float inv_N, float PW) {return N % 2 == 0 ? 0. : inv_N * (1. - minus1hochNminus1halbe(N))*_sin(PW);}
float comp_HAE(int N, float inv_N, float PW) {return N % 2 == 0 ? 0. : inv_N * (minus1hochN(N)*_sin(PW*float(N)+.25) - 1.);}

float MADD(float t, float f, float phase, int NMAX, int NINC, float MIX, float CO, float NDECAY, float RES, float RES_Q, float DET, float PW, int keyF)
{
    float ret = 0.;
    float INR = keyF==1 ? 1./CO : f/CO;
    float IRESQ = keyF==1 ? 1./RES_Q : 1./(RES_Q*f);
    
    float p = f*t + phase;
    for(int N=1; N<=NMAX; N+=NINC)
    {
        float float_N = float(N);
        float inv_N = 1./float_N;
        float comp_mix = MIX < 0. ? (MIX+1.) * comp_TRI(N,inv_N)    +  (-MIX)  * comp_SAW(N,inv_N)
                       : MIX < 1. ?   MIX    * comp_TRI(N,inv_N)    + (1.-MIX) * comp_SQU(N,inv_N,PW)
                                  : (MIX-1.) * comp_HAE(N,inv_N,PW) + (2.-MIX) * comp_SQU(N,inv_N,PW);

        float filter_N = pow(1. + pow(float_N*INR,NDECAY),-.5) + RES * exp(-pow((float_N*f-CO)*IRESQ,2.));
        
        if(abs(filter_N*comp_mix) < 1e-6) break; //or is it wise to break already?
        
        ret += comp_mix * filter_N * (_sin(float_N * p) + _sin(float_N * p * (1.+DET)));
    }
    return s_atan(ret);
}

float QFM_FB(float PH, float FB) // my guessing of feedback coefficients, FB>0 'saw', FB<0 'sq'
{
    if(FB > 0.) return abs(FB) * .8*_sin(PH + .35*_sin(PH));
    else return abs(FB) * _sin(PH + .5*PI);
}

float QFM(float t, float f, float phase, float LV1, float LV2, float LV3, float LV4, float FR1, float FR2, float FR3, float FR4, float FB1, float FB2, float FB3, float FB4, float ALGO)
{
    int iALGO = int(ALGO);
    float PH1 = FR1 * f * t + phase;
    float PH2 = FR2 * f * t + phase;
    float PH3 = FR3 * f * t + phase;
    float PH4 = FR4 * f * t + phase;
    
    float LINK41 = 0., LINK42 = 0., LINK43 = 0., LINK32 = 0., LINK31 = 0., LINK21 = 0.; 
    if(iALGO == 1)       {LINK43 = 1.; LINK32 = 1.; LINK21 = 1.;}
    else if(iALGO == 2)  {LINK42 = 1.; LINK32 = 1.; LINK21 = 1.;}    
    else if(iALGO == 3)  {LINK41 = 1.; LINK32 = 1.; LINK21 = 1.;}
    else if(iALGO == 4)  {LINK42 = 1.; LINK43 = 1.; LINK31 = 1.; LINK21 = 1.;}
    else if(iALGO == 5)  {LINK41 = 1.; LINK31 = 1.; LINK21 = 1.;}
    else if(iALGO == 6)  {LINK43 = 1.; LINK32 = 1.;}
    else if(iALGO == 7)  {LINK43 = 1.; LINK32 = 1.; LINK31 = 1.;}
    else if(iALGO == 8)  {LINK21 = 1.; LINK43 = 1.;}
    else if(iALGO == 9)  {LINK43 = 1.; LINK42 = 1.; LINK41 = 1.;}
    else if(iALGO == 10) {LINK43 = 1.; LINK42 = 1.;}
    else if(iALGO == 11) {LINK43 = 1.;}

    float OP4 = LV4 * _sin(PH4 + QFM_FB(PH4, FB4));
    float OP3 = LV3 * _sin(PH3 + QFM_FB(PH3, FB3) + LINK43*OP4);
    float OP2 = LV2 * _sin(PH2 + QFM_FB(PH2, FB2) + LINK42*OP4 + LINK32*OP3);
    float OP1 = LV1 * _sin(PH1 + QFM_FB(PH1, FB1) + LINK41*OP4 + LINK31*OP3 + LINK32*OP2);
    
    float sum = OP1;
    if(LINK21 > 0.) sum += OP2;
    if(LINK31 + LINK32 > 0.) sum += OP3;
    if(LINK41 + LINK42 + LINK43 > 0.) sum += OP4;
    
    return s_atan(sum);
}

float reverbFsaw3_IIR(float time, float f, float tL, float vel, float IIRgain, float IIRdel1, float IIRdel2, float IIRdel3, float IIRdel4)
{
    int imax = int(log(filterthreshold)/log(IIRgain));
    float delay[4] = float[4](IIRdel1, IIRdel2, IIRdel3, IIRdel4);
    
    float sum = 0.;
    
    // 4 IIR comb filters
    for(int d=0; d<4; d++)
    {
        float fac = 1.;
        
        for(int i=0; i<imax; i++)
        {
            float _TIME = time - float(i)*delay[d] * (.8 + .4*pseudorandom(sum));
            sum += fac*(theta(_TIME*SPB)*exp(-8.*_TIME*SPB)*((.5+(.5*_psq(8.*_TIME*SPB)))*(2.*fract(f*_TIME+0.)-1.)));
            fac *= -IIRgain;
        }
    }
    return .25*sum;
}

float reverbFsaw3_AP1(float time, float f, float tL, float vel, float IIRgain, float IIRdel1, float IIRdel2, float IIRdel3, float IIRdel4, float APgain, float APdel1)
{
    // first allpass delay line
    float _TIME = time;
    float sum = -APgain * reverbFsaw3_IIR(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4);
    float fac = 1. - APgain * APgain;
    
    int imax = 1 + int((log(filterthreshold)-log(fac))/log(APgain));
    
    for(int i=0; i<imax; i++)
    {
        _TIME -= APdel1 * (.9 + 0.2*pseudorandom(time));
        sum += fac * reverbFsaw3_IIR(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4);
        fac *= APgain * (1. + 0.01*pseudorandom(_TIME));
    }
    return sum;        
}

float reverbFsaw3(float time, float f, float tL, float vel, float IIRgain, float IIRdel1, float IIRdel2, float IIRdel3, float IIRdel4, float APgain, float APdel1, float APdel2)
{   // // based on this Schroeder Reverb from Paul Wittschen: http://www.paulwittschen.com/files/schroeder_paper.pdf
    // todo: add some noise...
    // second allpass delay line
    float _TIME = time;
    float sum = -APgain * reverbFsaw3_AP1(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4, APgain, APdel1);
    float fac = 1. - APgain * APgain;

    int imax = 1 + int((log(filterthreshold)-log(fac))/log(APgain));

    for(int i=0; i<imax; i++)
    {
        _TIME -= APdel2 * (.9 + 0.2*pseudorandom(time));
        sum += fac * reverbFsaw3_AP1(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4, APgain, APdel1);
        fac *= APgain * (1. + 0.01*pseudorandom(_TIME));
    }
    return sum;        
}
float avglpBDbody3f(float time, float f, float tL, float vel, float N)
{    
    int iN = int(N);

    float _TIME = time;
    float avg = 0.;
    
    for(int i = 0; i < iN; i++)
    {
          _TIME = time - float(i)*Tsample;
          avg += s_atan(smoothstep(0.,.01,_TIME)*smoothstep(.3+.1,.1,_TIME)*MADD(_TIME,(150.+(60.-150.)*smoothstep(-.2, 0.,-_TIME)),5.,10,1,.8,1.,1.,1.,.1,0.,0.,1) + 1.5*.5*step(_TIME,.05)*_sin(_TIME*1100.*5.*_saw(_TIME*800.*5.)) + 1.5*(1.-exp(-1000.*_TIME))*exp(-40.*_TIME)*_sin((400.-200.*_TIME)*_TIME*_sin(1.*(150.+(60.-150.)*smoothstep(-.2, 0.,-_TIME))*_TIME))) / N;
    }
    return avg;
}
float reverbsnrrev_IIR(float time, float f, float tL, float vel, float IIRgain, float IIRdel1, float IIRdel2, float IIRdel3, float IIRdel4)
{
    int imax = int(log(filterthreshold)/log(IIRgain));
    float delay[4] = float[4](IIRdel1, IIRdel2, IIRdel3, IIRdel4);
    
    float sum = 0.;
    
    // 4 IIR comb filters
    for(int d=0; d<4; d++)
    {
        float fac = 1.;
        
        for(int i=0; i<imax; i++)
        {
            float _TIME = time - float(i)*delay[d] * (.8 + .4*pseudorandom(sum));
            sum += fac*clip((1.+1.6)*(_tri(_TIME*(350.+(6000.-800.)*smoothstep(-.01,0.,-_TIME)+(800.-350.)*smoothstep(-.01-.01,-.01,-_TIME)))*smoothstep(-.1,-.01-.01,-_TIME) + .7*fract(sin(_TIME*90.)*4.5e4)*doubleslope(_TIME,.05,.3,.3),-1., 1.)*doubleslope(_TIME,0.,.25,.3));
            fac *= -IIRgain;
        }
    }
    return .25*sum;
}

float reverbsnrrev_AP1(float time, float f, float tL, float vel, float IIRgain, float IIRdel1, float IIRdel2, float IIRdel3, float IIRdel4, float APgain, float APdel1)
{
    // first allpass delay line
    float _TIME = time;
    float sum = -APgain * reverbsnrrev_IIR(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4);
    float fac = 1. - APgain * APgain;
    
    int imax = 1 + int((log(filterthreshold)-log(fac))/log(APgain));
    
    for(int i=0; i<imax; i++)
    {
        _TIME -= APdel1 * (.9 + 0.2*pseudorandom(time));
        sum += fac * reverbsnrrev_IIR(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4);
        fac *= APgain * (1. + 0.01*pseudorandom(_TIME));
    }
    return sum;        
}

float reverbsnrrev(float time, float f, float tL, float vel, float IIRgain, float IIRdel1, float IIRdel2, float IIRdel3, float IIRdel4, float APgain, float APdel1, float APdel2)
{   // // based on this Schroeder Reverb from Paul Wittschen: http://www.paulwittschen.com/files/schroeder_paper.pdf
    // todo: add some noise...
    // second allpass delay line
    float _TIME = time;
    float sum = -APgain * reverbsnrrev_AP1(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4, APgain, APdel1);
    float fac = 1. - APgain * APgain;

    int imax = 1 + int((log(filterthreshold)-log(fac))/log(APgain));

    for(int i=0; i<imax; i++)
    {
        _TIME -= APdel2 * (.9 + 0.2*pseudorandom(time));
        sum += fac * reverbsnrrev_AP1(_TIME, f, tL, vel, IIRgain, IIRdel1, IIRdel2, IIRdel3, IIRdel4, APgain, APdel1);
        fac *= APgain * (1. + 0.01*pseudorandom(_TIME));
    }
    return sum;        
}


float protokick(float t, float f_start, float f_end, float fdecay, float hold, float decay, float drive, float detune, float rev_amount, float rev_hold, float rev_decay, float rev_drive)
{
    float phi = drop_phase(t, fdecay, f_start, f_end);
    float rev_phi = phi + reverb_phase(t, rev_amount);
    return clamp(drive*.5*(_sin(phi)+_sin((1.-detune)*phi)),-1.,1.) * exp(-max(t-hold, 0.)/decay)
         + clamp(rev_drive*.5*(_sin(rev_phi)+_sin((1.-detune)*rev_phi)),-1.,1.) * exp(-max(t-rev_hold, 0.)/rev_decay);
} 

float bitexplosion(float time, float B, float dmaxN, float fvar, float B2amt, float var1, float var2, float var3, float decay)
{ // this still sounds very different on different systems...
    float snd = 0.;
    float B2 = mod(B, 2.);
    float f = 60.*fvar;
	float dt = var1 * 2.*PI/15. * B/sqrt(10.*var2-.5*var3*B);
    int maxN = 10 + int(dmaxN);
    for(int i=0; i<2*maxN+1; i++)
    {
        float t = time + float(i - maxN)*dt;
        snd += _sin(f*t + .5*(1.+B2amt*B2)*_sin(.5*f*t));
    }
    float env = exp(-2.*B/decay);
    return atan(snd * env);
}


float rfloat(int off){return sequence_texture[off];}

#define NTRK 6
#define NMOD 118
#define NPTN 17
#define NNOT 1049
#define NDRM 37

int trk_sep(int index)      {return int(rfloat(index));}
int trk_syn(int index)      {return int(rfloat(index+1+1*NTRK));}
float trk_norm(int index)   {return     rfloat(index+1+2*NTRK);}
float trk_rel(int index)    {return     rfloat(index+1+3*NTRK);}
float trk_slide(int index)  {return     rfloat(index+1+4*NTRK);}
float mod_on(int index)     {return     rfloat(index+1+5*NTRK);}
float mod_off(int index)    {return     rfloat(index+1+5*NTRK+1*NMOD);}
int mod_ptn(int index)      {return int(rfloat(index+1+5*NTRK+2*NMOD));}
float mod_transp(int index) {return     rfloat(index+1+5*NTRK+3*NMOD);}
int ptn_sep(int index)      {return int(rfloat(index+1+5*NTRK+4*NMOD));}
float note_on(int index)    {return     rfloat(index+2+5*NTRK+4*NMOD+NPTN);}
float note_off(int index)   {return     rfloat(index+2+5*NTRK+4*NMOD+NPTN+1*NNOT);}
float note_pitch(int index) {return     rfloat(index+2+5*NTRK+4*NMOD+NPTN+2*NNOT);}
float note_pan(int index)   {return     rfloat(index+2+5*NTRK+4*NMOD+NPTN+3*NNOT);}
float note_vel(int index)   {return     rfloat(index+2+5*NTRK+4*NMOD+NPTN+4*NNOT);}
float note_slide(int index) {return     rfloat(index+2+5*NTRK+4*NMOD+NPTN+5*NNOT);}
float drum_rel(int index)   {return     rfloat(index+2+5*NTRK+4*NMOD+NPTN+6*NNOT);}

vec2 mainSynth(float time)
{
    float max_mod_off = 66.;
    int drum_index = 63;
    
    float sL = 0.;
    float sR = 0.;
    float dL = 0.;
    float dR = 0.;

    // mod for looping
    float BT = mod(BPS * time, max_mod_off);
    time = SPB * BT;
    
    float time2 = time - stereo_delay;
    float sidechain = 1.;

    float amaysynL, amaysynR, amaydrumL, amaydrumR, B, Bon, Boff, Bprog, Bproc, L, tL, _t, _t2, vel, rel, f, amtL, amtR, env;
    int tsep0, tsep1, _modU, _modL, ptn, psep0, psep1, _noteU, _noteL, syn, drum;

    for(int trk = 0; trk < NTRK; trk++)
    {
        tsep0 = trk_sep(trk);
        tsep1 = trk_sep(trk + 1);

        syn = trk_syn(trk);
        rel = trk_rel(trk);
 
        for(_modU = tsep0; (_modU < tsep1 - 1) && (BT > mod_on(_modU + 1)); _modU++);             
        for(_modL = tsep0; (_modL < tsep1 - 1) && (BT >= mod_off(_modL) + rel); _modL++);

        for(int _mod = _modL; _mod <= _modU; _mod++)
        {
            B = BT - mod_on(_mod);

            ptn   = mod_ptn(_mod);
            psep0 = ptn_sep(ptn);
            psep1 = ptn_sep(ptn + 1);
                         
            for(_noteU = psep0; (_noteU < psep1 - 1) && (B > note_on(_noteU + 1)); _noteU++);
            for(_noteL = psep0; (_noteL < psep1 - 1) && (B >= note_off(_noteL) + rel); _noteL++);
            //here: could introduce "monosynth" mode that sets _noteL = _noteU

            for(int _note = _noteL; _note <= _noteU; _note++)
            {
                if(syn == drum_index)
                {
                    drum = int(note_pitch(_note));
                    rel = drum_rel(drum);
                }

                amaysynL  = 0.;
                amaysynR  = 0.;
                amaydrumL = 0.;
                amaydrumR = 0.;

                Bon   = note_on(_note);
                Boff  = note_off(_note) + rel;
                L     = Boff - Bon;
                tL    = L * SPB;
                Bprog = B - Bon;
                Bproc = Bprog / L;
                _t    = Bprog * SPB;
                _t2   = _t - stereo_delay;
                vel   = note_vel(_note);
                amtL  = clamp(1. - note_pan(_note), 0., 1.);
                amtR  = clamp(1. + note_pan(_note), 0., 1.);

                if(syn == drum_index)
                {
                    env = trk_norm(trk) * theta(Bprog) * theta(L - Bprog);
                    if(drum == 0) { sidechain = min(sidechain, 1. - vel * (clamp(1e4 * Bprog,0.,1.) - pow(Bprog/(L-rel),8.))); }
                    else if(drum == 4){
                        amaydrumL = vel*.2*fract(sin(_t*100.*.9)*50000.*.9)*doubleslope(_t,.03,.1,.1);
                        amaydrumR = vel*.2*fract(sin(_t2*100.*.9)*50000.*.9)*doubleslope(_t2,.03,.1,.1);
                    }
                    else if(drum == 5){
                        amaydrumL = vel*.4*(.6+(.25*_psq(4.*B)))*fract(sin(_t*100.*.3)*50000.*2.)*doubleslope(_t,0.,.05,0.);
                        amaydrumR = vel*.4*(.6+(.25*_psq(4.*B)))*fract(sin(_t2*100.*.3)*50000.*2.)*doubleslope(_t2,0.,.05,0.);
                    }
                    else if(drum == 18){
                        amaydrumL = vel*(.12*(.47*lpnoise(_t,2689.)+.43*lpnoise(_t,2535.)+.36*lpnoise(_t,1208.))*(smoothstep(0.,.06,_t)-smoothstep(0.,.84,_t-.47))+_sin(drop_phase(_t,.22,444.,238.))*exp(-_t*10.5)*.44+_sin(drop_phase(_t*1901.,.22,444.,238.))*exp(-_t*3.3)*.87);
                        amaydrumR = vel*(.12*(.47*lpnoise(_t2,2689.)+.43*lpnoise(_t2,2535.)+.36*lpnoise(_t2,1208.))*(smoothstep(0.,.06,_t2)-smoothstep(0.,.84,_t2-.47))+_sin(drop_phase(_t2,.22,444.,238.))*exp(-_t2*10.5)*.44+_sin(drop_phase(_t2*1901.,.22,444.,238.))*exp(-_t2*3.3)*.87);
                    }
                    else if(drum == 21){
                        amaydrumL = vel*13.43*lpnoise(_t, 1.+4.35*_t)*(smoothstep(0.,1e-3,_t)-smoothstep(0.,.025,_t-.019));
                        amaydrumR = vel*13.43*lpnoise(_t2, 1.+4.35*_t2)*(smoothstep(0.,1e-3,_t2)-smoothstep(0.,.025,_t2-.019));
                    }
                    else if(drum == 27){
                        amaydrumL = vel*((clamp(1.09*_tri(drop_phase(_t,.08,249.,77.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t-.04))+.97*clamp(.99*_tri(drop_phase(_t,.08,249.,77.)+.97*lpnoise(_t,9855.)),-1.,1.)*exp(-21.22*_t)+.03*lpnoise(_t,10655.)*(1.-smoothstep(0.,.58,_t-.81))+.71*lpnoise(_t,7520.)*exp(-_t*16.22)+.57*lpnoise(_t,4386.)*exp(-_t*29.48))*smoothstep(0.,.005,_t));
                        amaydrumR = vel*((clamp(1.09*_tri(drop_phase(_t2,.08,249.,77.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t2-.04))+.97*clamp(.99*_tri(drop_phase(_t2,.08,249.,77.)+.97*lpnoise(_t2,9855.)),-1.,1.)*exp(-21.22*_t2)+.03*lpnoise(_t2,10655.)*(1.-smoothstep(0.,.58,_t2-.81))+.71*lpnoise(_t2,7520.)*exp(-_t2*16.22)+.57*lpnoise(_t2,4386.)*exp(-_t2*29.48))*smoothstep(0.,.005,_t2));
                    }
                    else if(drum == 28){
                        amaydrumL = vel*((clamp(1.09*_tri(drop_phase(_t,.08,249.,77.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t-.04))+.97*clamp(.99*_tri(drop_phase(_t,.08,249.,77.)+.97*lpnoise(_t,9855.)),-1.,1.)*exp(-21.22*_t)+.03*lpnoise(_t,10655.)*(1.-smoothstep(0.,.58,_t-.81))+.71*lpnoise(_t,7520.)*exp(-_t*16.22)+.57*lpnoise(_t,4386.)*exp(-_t*29.48))*smoothstep(0.,.005,_t));
                        amaydrumR = vel*((clamp(1.09*_tri(drop_phase(_t2,.08,249.,77.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t2-.04))+.97*clamp(.99*_tri(drop_phase(_t2,.08,249.,77.)+.97*lpnoise(_t2,9855.)),-1.,1.)*exp(-21.22*_t2)+.03*lpnoise(_t2,10655.)*(1.-smoothstep(0.,.58,_t2-.81))+.71*lpnoise(_t2,7520.)*exp(-_t2*16.22)+.57*lpnoise(_t2,4386.)*exp(-_t2*29.48))*smoothstep(0.,.005,_t2));
                    }
                    else if(drum == 31){
                        amaydrumL = vel*((clamp(1.54*_tri(drop_phase(_t,.06,254.,67.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t-.25))+.48*clamp(.83*_tri(drop_phase(_t,.06,254.,67.)+.48*lpnoise(_t,1022.)),-1.,1.)*exp(-18.09*_t)+.39*lpnoise(_t,14859.)*(1.-smoothstep(0.,.51,_t-.47))+.25*lpnoise(_t,2739.)*exp(-_t*22.61)+.34*lpnoise(_t,5121.)*exp(-_t*23.75))*smoothstep(0.,.003,_t));
                        amaydrumR = vel*((clamp(1.54*_tri(drop_phase(_t2,.06,254.,67.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t2-.25))+.48*clamp(.83*_tri(drop_phase(_t2,.06,254.,67.)+.48*lpnoise(_t2,1022.)),-1.,1.)*exp(-18.09*_t2)+.39*lpnoise(_t2,14859.)*(1.-smoothstep(0.,.51,_t2-.47))+.25*lpnoise(_t2,2739.)*exp(-_t2*22.61)+.34*lpnoise(_t2,5121.)*exp(-_t2*23.75))*smoothstep(0.,.003,_t2));
                    }
                    else if(drum == 32){
                        amaydrumL = vel*((clamp(2.24*_tri(drop_phase(_t,.08,217.,64.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t-.29))+.7*clamp(.84*_tri(drop_phase(_t,.08,217.,64.)+.7*lpnoise(_t,1936.)),-1.,1.)*exp(-23.11*_t)+.08*lpnoise(_t,5166.)*(1.-smoothstep(0.,.16,_t-.55))+.77*lpnoise(_t,6784.)*exp(-_t*29.89)+.53*lpnoise(_t,4404.)*exp(-_t*24.64))*smoothstep(0.,.002,_t));
                        amaydrumR = vel*((clamp(2.24*_tri(drop_phase(_t2,.08,217.,64.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t2-.29))+.7*clamp(.84*_tri(drop_phase(_t2,.08,217.,64.)+.7*lpnoise(_t2,1936.)),-1.,1.)*exp(-23.11*_t2)+.08*lpnoise(_t2,5166.)*(1.-smoothstep(0.,.16,_t2-.55))+.77*lpnoise(_t2,6784.)*exp(-_t2*29.89)+.53*lpnoise(_t2,4404.)*exp(-_t2*24.64))*smoothstep(0.,.002,_t2));
                    }
                    else if(drum == 33){
                        amaydrumL = vel*(.57*(0.*lpnoise(_t,981.)+0.*lpnoise(_t,950.)+0.*lpnoise(_t,2937.))*(smoothstep(0.,0.,_t)-smoothstep(0.,.13,_t-.76))+_sin(drop_phase(_t,.04,607.,288.))*exp(-_t*4.5)*.46+_sin(drop_phase(_t*1076.,.04,607.,288.))*exp(-_t*9.6)*.49);
                        amaydrumR = vel*(.57*(0.*lpnoise(_t2,981.)+0.*lpnoise(_t2,950.)+0.*lpnoise(_t2,2937.))*(smoothstep(0.,0.,_t2)-smoothstep(0.,.13,_t2-.76))+_sin(drop_phase(_t2,.04,607.,288.))*exp(-_t2*4.5)*.46+_sin(drop_phase(_t2*1076.,.04,607.,288.))*exp(-_t2*9.6)*.49);
                    }
                    else if(drum == 34){
                        amaydrumL = vel*(bitexplosion(_t,Bprog,18.,1.5,4.3,2.21,1.35,2.69,2.02));
                        amaydrumR = vel*(bitexplosion(_t2,Bprog,18.,1.5,4.3,2.21,1.35,2.69,2.02));
                    }
                    else if(drum == 37){
                        amaydrumL = vel*(bitexplosion(_t,Bprog,13.,2.1,1.7,8.68,3.48,.93,.58));
                        amaydrumR = vel*(bitexplosion(_t2,Bprog,13.,2.1,1.7,8.68,3.48,.93,.58));
                    }
                    
                    dL += amtL * s_atan(env * amaydrumL);
                    dR += amtR * s_atan(env * amaydrumR);
                }
                else
                {
                    f = freqC1(note_pitch(_note) + mod_transp(_mod));

                    if(abs(note_slide(_note)) > 1e-3) // THIS IS SLIDEY BIZ
                    {
                        float Bslide = trk_slide(trk);
                        float fac = note_slide(_note) * log(2.)/12.;
                        if (Bprog <= Bslide)
                        {
                            float help = 1. - Bprog/Bslide;
                            f *= Bslide * (fhelp(fac) - help * fhelp(fac*help*help)) / Bprog;
                        }
                        else
                        {
                            f *= 1. + (Bslide * (fhelp(fac)-1.)) / Bprog;
                        }
                    }

                    env = theta(Bprog) * (1. - smoothstep(Boff-rel, Boff, B));
                    if(syn == 0){amaysynL = _sin(f*_t); amaysynR = _sin(f*_t2);}
                    else if(syn == 52){
                        amaysynL = (vel*waveshape(QFM(_t,4.*f,0.,.00787*43.,.00787*94.,.00787*121.,.00787*41.,.5,1.,1.001,1.,.00787*81.,.00787*62.,.00787*65.,.00787*61.,1.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_t,tL,.2,0.,.01,1.,.05)+(.5+.5*vel)*clip((1.+2.)*_sin(f*_t)));
                        amaysynR = (vel*waveshape(QFM(_t2,4.*f,0.,.00787*43.,.00787*94.,.00787*121.,.00787*41.,.5,1.,1.001,1.,.00787*81.,.00787*62.,.00787*65.,.00787*61.,1.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_t2,tL,.2,0.,.01,1.,.05)+(.5+.5*vel)*clip((1.+2.)*_sin(f*_t2)));
                    }
                    else if(syn == 57){
                        amaysynL = (.5*vel*waveshape(QFM(_t,f,0.,.00787*115.*(1.+(.225*_sin(.861*B))),.00787*36.*(1.+(.26*_sin(.861*B))),.00787*51.*(1.+(.309*_sin(.861*B))),.00787*34.*(1.+(.199*_sin(.861*B))),1.,.998,1.001,1.,.00787*93.,.00787*36.,.00787*98.,.00787*98.,5.),(.5+(.5*_sin(.861*B))),.05,.46,.3,.7,.8)*env_AHDSR(_t,tL,.001,.15,.15,.04,.6));
                        amaysynR = (.5*vel*waveshape(QFM(_t2,f,0.,.00787*115.*(1.+(.225*_sin(.861*B))),.00787*36.*(1.+(.26*_sin(.861*B))),.00787*51.*(1.+(.309*_sin(.861*B))),.00787*34.*(1.+(.199*_sin(.861*B))),1.,.998,1.001,1.,.00787*93.,.00787*36.,.00787*98.,.00787*98.,5.),(.5+(.5*_sin(.861*B))),.05,.46,.3,.7,.8)*env_AHDSR(_t2,tL,.001,.15,.15,.04,.6));
                    }
                    else if(syn == 62){
                        amaysynL = (vel*env_AHDSR(_t,tL,.012,0.,.197,.91,.014)*MADD(floor(16000.*_t+.5)/16000.,f,0.,128,1,-.57,(1309.+(645.*_sin_(2.*B,.4))),5.,0.,14.95,.019,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0));
                        amaysynR = (vel*env_AHDSR(_t2,tL,.012,0.,.197,.91,.014)*MADD(floor(16000.*_t2+.5)/16000.,f,0.,128,1,-.57,(1309.+(645.*_sin_(2.*B,.4))),5.,0.,14.95,.019,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0));
                    }
                    
                    sL += amtL * s_atan(trk_norm(trk) * clamp(env,0.,1.) * amaysynL);
                    sR += amtR * s_atan(trk_norm(trk) * clamp(env,0.,1.) * amaysynR);
                }
            }
        }
    }
    return vec2(s_atan(sidechain * sL + dL), s_atan(sidechain * sR + dR));
}

vec2 mainSound(float t)
{
    return mainSynth(t);
}

void main()
{
   float t = (iBlockOffset + (gl_FragCoord.x - .5) + (gl_FragCoord.y - .5)*iTexSize)/iSampleRate;
   vec2 y = mainSound( t );
   vec2 v  = floor((0.5+0.5*y)*65535.0);
   vec2 vl = mod(v,256.0)/255.0;
   vec2 vh = floor(v/256.0)/255.0;
   gl_FragColor = vec4(vl.x,vh.x,vl.y,vh.y);
}
