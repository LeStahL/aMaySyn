########### SYNTHS ###########


osc  somesaw1  shape=saw
form somesawD1 detune src=somesaw1 amount=0.01,0.033,0.04
osc  somesaw2  shape=saw freq=.5*f phase=0.01
form somesawD2 op=detune src=somesaw2 amount=0.05,-0.03,-0.02
form somesaw   mix src=somesawD1+.6*somesawD2
env  stutter   shape=expdecayrepeat exponent=16. beats=.125
env  slowdec   shape=expdecay exponent=1.5
main Supersaw  src=stutter*slowdec*somesaw


osc  S01    shape=sin freq=f
gac  G01    offset=0 const=1. lin=2. quad=-.5 sin=3. sin_coeff=2. exp=2. exp_coeff=-.25 mode=global
form S01w   op=waveshape src=S01 amount=1. a=0.01 b=0.7 c=0.1 d=0.6 e=0.8
main WShape src=S01-.1*G01*S01+.1*G01*S01w

main justsaw src=somesaw1

env M8_env shape=adsrexp attack=0.75 decay=0.5 sustain=0.1 release=0.8 mode=beat
env M8_fenv shape=adsrexp attack=0.5 decay=0.5 sustain=0.1 release=10 scale=4500 shift=500 mode=beat
osc M8_osc shape=madd freq=f phase=0 nmax=200 ninc=1 mix=-1 cutoff=M8_fenv Q=20 res=0 resq=0 detune=0.018 pw=0
#form M8_oscD op=detune src=M8_osc detune=1,.3 
form M8_oscDQ op=quantize src=M8_osc bits=128
form M8_oscDL lofi src=M8_oscDQ bits=8
form M8_oscDLC chorus src=M8_oscDL number=6 step=2e-3 intensity=1e-3 rate=20
main M8yStrng src=M8_env*M8_oscDL release=0.8

form bitdrop op=mix src=1024+-512*Bproc
osc M8bass_osc1 shape=squ freq=f
osc M8bass_osc2 shape=squ freq=.97*f phase=.3 pw=.3
form M8bass_osc op=mix src=M8bass_osc1,M8bass_osc2
form M8bass_oscQ op=quantize src=M8bass_osc bits=bitdrop
main M8yBeast src=M8bass_oscQ

lfo A31_envlfo shape=sin freq=8. mode=beat overdrive=8
osc A31_osc1 shape=tri freq=f
osc A31_osc2 shape=sin freq=.5*f
osc A31_osc3 shape=saw freq=2.*f
osc A31_osc4 shape=tri freq=f phase=A31_lfo4
osc A31_osc5 shape=tri freq=.999*f phase=A31_lfo5
lfo A31_lfo4 shape=tri freq=0.5 scale=2e-4 shift=.01
lfo A31_lfo5 shape=tri freq=0.33 scale=1e-3 shift=.05
form A31_mix mix src=.35*A31_osc1 + .3*A31_osc2 + .05*A31_osc3 + .35*A31_osc4 + .5*A31_osc5
main M8yBuzz src=A31_envlfo*A31_mix

random qmattack     min=1e-3    max=3e-2    digits=3    store
random qmrelease    min=1e-3    max=1e-2    digits=3    store
random qmlfoscale   min=200     max=950     digits=0    store
random qmlfoshift   min=1000    max=2000    digits=0    store
random qmndecay     min=1       max=16      digits=0    store
random qmres        min=0       max=10      digits=2    store
random qmresq       min=1e-2    max=10      digits=2    store
random qmdetune     min=0       max=0.02    digits=3    store
osc macebace_syn shape=madd freq=f nmax=256 ninc=2 mix=1+.9*macebace_synlfo cutoff=macebace_lfo q=qmndecay res=qmres resq=qmresq pw=0.4*macebace_synlfo detune=qmdetune
form macebace_synOD overdrive src=macebace_syn gain=2*macebace_synlfo
lfo macebace_synlfo shape=sin freq=4 phase=0 scale=.4 shift=.55 overdrive=1 mode=global
lfo macebace_lfo shape=sin freq=2 phase=.4 scale=qmlfoscale shift=qmlfoshift mode=global
env macebace_env shape=adsr attack=qmattack decay=0.01 sustain=1 release=qmrelease
main macebace src=macebace_env*macebace_synOD release=1e-2

osc maceboss_sub1 shape=sin freq=.499*f overdrive=.5
osc maceboss_sub2 shape=squ freq=1.01*f pw=.95
form macebace_synps pitchshift src=macebace_syn steps=-12
form macebace_sinsh sinshape src=macebace_synps parts=3
main maceboss src=macebace_env*macebace_sinsh+.8*maceboss_sub1+macebace_env*.4*maceboss_sub2 release=.06 slidetime=.31

random qlev1 min=0 max=127 digits=0 store
random qlev2 min=0 max=127 digits=0 store
random qlev3 min=0 max=127 digits=0 store
random qlev4 min=0 max=127 digits=0 store
random qalg0 min=1 max=11  digits=0 store
random qfbk1 min=0 max=127 digits=0 store
random qfbk2 min=0 max=127 digits=0 store
random qfbk3 min=0 max=127 digits=0 store
random qfbk4 min=0 max=127 digits=0 store
random qatt0 min=0 max=0.1 digits=3 store
random qhld0 min=0 max=0.1 digits=3 store
random qdec0 min=0 max=0.2 digits=3 store
random qsus0 min=0 max=1   digits=3 store
random qrel0 min=0 max=.2  digits=3 store
osc    QFManiaA shape=fm freq=f lv1=qlev1 lv2=qlev2 lv3=qlev3 lv4=qlev4 fr1=.5 fr3=1.001 fb1=qfbk1 fb2=qfbk2 fb3=qfbk3 fb4=qfbk4 algo=qalg0 parscale=127
lfo    QFManiaLFO shape=sin freq=.4 scale=.5 shift=.5 mode=global
form   QFManiaB waveshape src=QFManiaA amount=QFManiaLFO a=.05 b=.46 c=.3 d=.7 e=.8
osc    QFManiaC shape=fm freq=f lv1=qlev1 lv2=qlev2 lv3=qlev3 lv4=qlev4 fr1=.5 fr3=1.001 fb1=qfbk1 fb2=qfbk2 fb3=qfbk3 fb4=qfbk4 algo=qalg0 parscale=127
form   QFManiaD quantize src=QFManiaC bits=8000
form   QFManiaE op=chorus src=QFManiaD number=2 step=.002 intensity=5. rate=5.5
main   FQMbace  src=vel*QFManiaC*macebace_env release=.2 slidetime=.6

random qlfo1frq min=0.001 max=1 digits=3 store !.320
random qlfo2frq min=0.001 max=1 digits=3 store !.761
random qlfo3frq min=0.001 max=1 digits=3 store !.115
random qlfo4frq min=0.001 max=1 digits=3 store !.362
random qlfo5frq min=0.001 max=1 digits=3 store !.431
random qlfo1amt min=.01 max=.5 digits=3 store
random qlfo2amt min=.01 max=.5 digits=3 store
random qlfo3amt min=.01 max=.5 digits=3 store
random qlfo4amt min=.01 max=.5 digits=3 store
lfo    QFMhighLFO1 shape=sin freq=qlfo1frq scale=qlfo1amt shift=1 mode=global
lfo    QFMhighLFO2 shape=sin freq=qlfo1frq scale=qlfo2amt shift=1 mode=global
lfo    QFMhighLFO3 shape=sin freq=qlfo1frq scale=qlfo3amt shift=1 mode=global
lfo    QFMhighLFO4 shape=sin freq=qlfo1frq scale=qlfo4amt shift=1 mode=global
lfo    QFMhighLFO5 shape=sin freq=qlfo1frq scale=.5 shift=.5 mode=global

osc    QFMhighA shape=fm freq=f lv1=qlev1*QFMhighLFO1 lv2=qlev2*QFMhighLFO2 lv3=qlev3*QFMhighLFO3 lv4=qlev4*QFMhighLFO4 fr1=1 fr3=1.001 fr2=0.998 fb1=qfbk1 fb2=qfbk2 fb3=qfbk3 fb4=qfbk4 algo=qalg0 parscale=127
form   QFMhighB waveshape src=QFMhighA amount=QFMhighLFO5 a=.05 b=.46 c=.3 d=.7 e=.8
env    FQMhigh_env shape=ahdsr attack=1e-3 hold=.15 decay=0.15 sustain=.04 release=.6
main   FQMhigh src=.5*vel*QFMhighB*FQMhigh_env release=.6
env    FQMimp_env shape=adsr attack=0.2 decay=0.01 sustain=1 release=.05
osc    FQMhigh_sub shape=sin freq=f phase=0 overdrive=2
main   FQMimp src=vel*QFManiaB*FQMimp_env+vel*FQMhigh_sub release=.05

########### DRUMS ###########

random f0 min=50  max=80  digits=1
random f1 min=100 max=150 digits=1
drum        BDbody shape=kick freq_start=f0 freq_end=f1 freq_decay=0.1 attack=0.1 hold=0.1 decay=0.3 click_amp=1.2 click_delay=.05 click_timbre=.8 overdrive=10 
maindrum    BD1 src=BDbody

drum BDbody2 shape=kick2 freq_start=200 freq_end=50 freq_decay=0.12 attack=0.015 hold=0.1 decay=0.15 click_amp=0.4 click_delay=0.03 click_timbre=1. sq_phase=5 sq_nmax=10 sq_mix=0.8 sq_inr=1 sq_ndecay=1 sq_res=1 sq_resq=.1 sq_detune=.1
maindrum BD2 src=3.*BDbody2

#drum BDbody3 shape=kick2 freq_start=150 freq_end=60 freq_decay=0.2 attack=0.01 hold=0.3 decay=0.1 click_amp=1.5 click_delay=0.05 click_timbre=5. sq_phase=5 sq_nmax=10 sq_mix=0.8 sq_inr=1 sq_ndecay=1 sq_res=1 sq_resq=.1 
#filter BDbody3f shape=avglp src=BDbody3 N=4
#filter BDbody3ff shape=avglp src=BDbody3f N=4
#maindrum BD3 src=4.*BDbody3ff
# it sucks. should be similar to this one: -- maybe just copy it
# s = vel * 2.*clamp(smoothstep(0.,0.01,_t)*smoothstep(-0.1,0.2,0.3-_t)*.1*MACESQ(_t, (60. + 150.*smoothstep(-0.3,0.,-_t)), 0., 100, 1, 1.,1.,.1,16.,10.,0.,0.) + (.7 * (smoothstep(0.,0.01,_t) * smoothstep(-0.2, 0.2, 0.3 - _t)) * _sin(_t*(60. + 150.*smoothstep(-0.3,0.,-t))*.5)) + s_crzy(10.*(1.-exp(-1000.*_t))*exp(-30.*_t) * _sin((300.-300.*_t)*_t)) + s_atan(40.*(1.-exp(-1000.*_t))*exp(-80.*_t) * _sin((1200.-1000.*sin(1000.*_t*sin(30.*_t)))*_t)),-1.5,1.5);}

drum shaker shape=fmnoise attack=0.03 decay=0.1 sustain=0.1 timbre1=0.9 timbre2=0.9
maindrum SHK src=.2*shaker 

#drum sumnois shape=fmnoise attack=0.0 decay=0.01 sustain=1.
#filter lpnoise shape=resolp src=sumnois cutoff=9000 res=.1
#maindrum LP_NOISE src=lpnoise release=.4

drum hut shape=fmnoise attack=0 decay=0.05 sustain=0 timbre1=.3 timbre2=2
lfo acclfo shape=squ freq=4. mode=beat,global shift=.6 scale=.25
maindrum HAT src=.4*acclfo*hut

drum snr shape=snare freq0=6000 freq1=800 freq2=350 freqdecay0=0.01 freqdecay1=0.01 decay=0.25 sustain=0.3 release=0.1 noise_amount=.7 noise_attack=0.05 noise_decay=0.3 noise_sustain=0.3 overdrive=1.6
maindrum SNR src=snr

drum explosion shape=bitexplosion nvar=1 freqvar=2 twostepvar=2 var1=1.5 var2=2 var3=1 decay=1 
#maindrum EXPLOSION src=explosion release=.5

#maindrum    NDV.D6      src="((clamp(1.43*_tri(drop_phase(_t,.182,153.909,76.006)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t-.152))+1.428*clamp(.707*_tri(drop_phase(_t,.182,153.909,76.006)+1.428*lpnoise(_t,760.989)),-1.,1.)*exp(-8.556*_t)+.066*lpnoise(_t,13562.653)*(1.-smoothstep(0.,.24,_t-.088))+.724*lpnoise(_t,4127.819)*exp(-_t*3.662)+.295*lpnoise(_t,7269.681)*exp(-_t*2.313))*smoothstep(0.,.05,_t))"
#maindrum    NDV.D23     src="(.837*(.541*lpnoise(_t,2041.774)+.798*lpnoise(_t,8260.482)+.931*lpnoise(_t,8317.984))*(smoothstep(0.,.007,_t)-smoothstep(0.,.37,_t-.05))+_sin(drop_phase(_t,.033,464.443,270.029))*exp(-_t*32.249)*.841+_sin(drop_phase(_t*659.983,.033,464.443,270.029))*exp(-_t*33.)*.618)"
#maindrum    NDV.D24     src="(fract(sin(_t*100.*1.)*50000.*1.)*doubleslope(_t,.001,.05,.1)+lpnoise(_t,12000.)*smoothstep(0.,0.,_t)*(1.-smoothstep(0.,.25,_t-0.-0.))+clip((1.+.41)*(_tri(drop2_phase(_t,.02,.028,2271.,341.,225.)))+1.34*fract(sin(_t*90.)*4.5e4)*doubleslope(_t,.04,.3,.01))*doubleslope(_t,0.,.1,0.)*(1.-smoothstep(.1,.1+.2,_t)))"
#maindrum    NDV.D25     src="(.1*env_AHDSR(_t,tL,.02,0.,.45,.05,0.)*(1.00*(_sq_(13870.2*((_t-0.00)-0.00*(1.+1.*_sin(.239*(_t-0.00)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.))))+_sq_(13870.2*((_t-0.00)-1.50e-02*(1.+1.*_sin(.239*(_t-0.00)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.))))+_sq_(13870.2*((_t-0.00)-3.00e-02*(1.+1.*_sin(.239*(_t-0.00)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.))))+_sq_(13870.2*((_t-0.00)-4.50e-02*(1.+1.*_sin(.239*(_t-0.00)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.)))))+8.00e-02*(_sq_(13870.2*((_t-1.23e-01)-0.00*(1.+1.*_sin(.239*(_t-1.23e-01)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.))))+_sq_(13870.2*((_t-1.23e-01)-1.50e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.))))+_sq_(13870.2*((_t-1.23e-01)-3.00e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.))))+_sq_(13870.2*((_t-1.23e-01)-4.50e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.02+.33*(.5+(.5*(2.*fract(4843.75*Bprog+0.)-1.))))))+.3*(lpnoise((_t-0.00*(1.+.5*_sin(.127*_t))),7182.81+1471.07*(7182.81+(1471.07*(2.*fract(2258.7*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-0.00*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-0.00*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-2.40e-02*(1.+.5*_sin(.127*_t))),7182.81+1471.07*(7182.81+(1471.07*(2.*fract(2258.7*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-2.40e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-2.40e-02*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-4.80e-02*(1.+.5*_sin(.127*_t))),7182.81+1471.07*(7182.81+(1471.07*(2.*fract(2258.7*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-4.80e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-4.80e-02*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-7.20e-02*(1.+.5*_sin(.127*_t))),7182.81+1471.07*(7182.81+(1471.07*(2.*fract(2258.7*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-7.20e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-7.20e-02*(1.+.5*_sin(.127*_t)))-.1-0.))))"
#maindrum    NDV.D26     src="lpnoise(_t,10000.)*smoothstep(0.,.01,_t)*(1.-(1.-.13)*smoothstep(0.,.12,_t-.01-0.))-.3*(1.00*lpnoise((_t-0.00),10000.)*smoothstep(0.,.01,(_t-0.00))*(1.-(1.-.13)*smoothstep(0.,.12,(_t-0.00)-.01-0.))+6.10e-01*lpnoise((_t-1.20e-03),10000.)*smoothstep(0.,.01,(_t-1.20e-03))*(1.-(1.-.13)*smoothstep(0.,.12,(_t-1.20e-03)-.01-0.))+3.72e-01*lpnoise((_t-2.40e-03),10000.)*smoothstep(0.,.01,(_t-2.40e-03))*(1.-(1.-.13)*smoothstep(0.,.12,(_t-2.40e-03)-.01-0.)))"
#maindrum    NDV.D27     src="(.5*env_AHDSR(_t,tL,.02,0.,.45,.05,0.)*(1.00*(_sq_(15060.45*((_t-0.00)-0.00*(1.+1.*_sin(.239*(_t-0.00)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.))))+_sq_(15060.45*((_t-0.00)-1.50e-02*(1.+1.*_sin(.239*(_t-0.00)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.))))+_sq_(15060.45*((_t-0.00)-3.00e-02*(1.+1.*_sin(.239*(_t-0.00)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.))))+_sq_(15060.45*((_t-0.00)-4.50e-02*(1.+1.*_sin(.239*(_t-0.00)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.)))))+8.00e-02*(_sq_(15060.45*((_t-1.23e-01)-0.00*(1.+1.*_sin(.239*(_t-1.23e-01)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.))))+_sq_(15060.45*((_t-1.23e-01)-1.50e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.))))+_sq_(15060.45*((_t-1.23e-01)-3.00e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.))))+_sq_(15060.45*((_t-1.23e-01)-4.50e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.18+.22*(.5+(.5*(2.*fract(17607.78*Bprog+0.)-1.))))))+.3*(lpnoise((_t-0.00*(1.+.5*_sin(.127*_t))),8677.45+5741.09*(8677.45+(5741.09*(2.*fract(12512.45*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-0.00*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-0.00*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-2.40e-02*(1.+.5*_sin(.127*_t))),8677.45+5741.09*(8677.45+(5741.09*(2.*fract(12512.45*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-2.40e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-2.40e-02*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-4.80e-02*(1.+.5*_sin(.127*_t))),8677.45+5741.09*(8677.45+(5741.09*(2.*fract(12512.45*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-4.80e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-4.80e-02*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-7.20e-02*(1.+.5*_sin(.127*_t))),8677.45+5741.09*(8677.45+(5741.09*(2.*fract(12512.45*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-7.20e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-7.20e-02*(1.+.5*_sin(.127*_t)))-.1-0.))))"
#maindrum    NDV.D28     src="(protokick(_t,195.819,60.842,.373,.333,.39,1.147,.197,.876,.379,.619,.958))"
#maindrum    NDV.D29     src="((clamp(1.43*_tri(drop_phase(_t,.182,153.909,76.006)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_t-.152))+1.428*clamp(.707*_tri(drop_phase(_t,.182,153.909,76.006)+1.428*lpnoise(_t,760.989)),-1.,1.)*exp(-8.556*_t)+.066*lpnoise(_t,13562.653)*(1.-smoothstep(0.,.24,_t-.088))+.724*lpnoise(_t,4127.819)*exp(-_t*3.662)+.295*lpnoise(_t,7269.681)*exp(-_t*2.313))*smoothstep(0.,.05,_t))"
#maindrum    NDV.D30     src=(.741*(.24*lpnoise(_t,9139.286)+.961*lpnoise(_t,6306.874)+.865*lpnoise(_t,7962.971))*(smoothstep(0.,.004,_t)-smoothstep(0.,.798,_t-.05))+_sin(drop_phase(_t,.06,2239.905,159.335))*exp(-_t*15.463)*.672+_sin(drop_phase(_t*642.32,.06,2239.905,159.335))*exp(-_t*3.375)*.195)"
#maindrum    NDV.D31     src=".01*lpnoise(_t,10000.)*smoothstep(0.,.1,_t)*(1.-(1.-.1)*smoothstep(0.,.32,_t-.1-0.))"
#maindrum    NDV.D32     src="(lpnoise(_t,(500.+(2000.*env_AHDSR(_t,tL,.01,0.,.25,0.,.2))))*smoothstep(0.,.0001,_t)*(1.-(1.-0.)*smoothstep(0.,.5,_t-.0001-0.)))"
#maindrum    NDV.D33     src=".4*(.6+(.25*_psq(4.*B)))*fract(sin(_t*100.*.3)*50000.*2.)*doubleslope(_t,0.,.05,0.)"

main        NDV.S13     src="env_AHDSR(_t,tL,.002,0.,.15,.25,.13)*bandpassBPsaw1(_t,f,tL,vel,(2000.+(1500.*_sin(.25*B))),10.,100.)"
main        NDV.S33     src="(vel*(QFM((_t-0.0*(1.+3.*_sin(.1*_t))),f,0.,.00787*71.,.00787*env_AHDSR((_t-0.0*(1.+3.*_sin(.1*_t))),tL,.18,.165,.229,.056,0.)*51.,.00787*env_AHDSR((_t-0.0*(1.+3.*_sin(.1*_t))),tL,.059,.205,.04,.098,0.)*5.,.00787*env_AHDSR((_t-0.0*(1.+3.*_sin(.1*_t))),tL,.108,.165,.094,.113,0.)*44.,.5,1.,1.001,1.,.00787*103.,.00787*20.,.00787*93.,.00787*92.,4.)+QFM((_t-4.0e-03*(1.+3.*_sin(.1*_t))),f,0.,.00787*71.,.00787*env_AHDSR((_t-4.0e-03*(1.+3.*_sin(.1*_t))),tL,.18,.165,.229,.056,0.)*51.,.00787*env_AHDSR((_t-4.0e-03*(1.+3.*_sin(.1*_t))),tL,.059,.205,.04,.098,0.)*5.,.00787*env_AHDSR((_t-4.0e-03*(1.+3.*_sin(.1*_t))),tL,.108,.165,.094,.113,0.)*44.,.5,1.,1.001,1.,.00787*103.,.00787*20.,.00787*93.,.00787*92.,4.)+QFM((_t-8.0e-03*(1.+3.*_sin(.1*_t))),f,0.,.00787*71.,.00787*env_AHDSR((_t-8.0e-03*(1.+3.*_sin(.1*_t))),tL,.18,.165,.229,.056,0.)*51.,.00787*env_AHDSR((_t-8.0e-03*(1.+3.*_sin(.1*_t))),tL,.059,.205,.04,.098,0.)*5.,.00787*env_AHDSR((_t-8.0e-03*(1.+3.*_sin(.1*_t))),tL,.108,.165,.094,.113,0.)*44.,.5,1.,1.001,1.,.00787*103.,.00787*20.,.00787*93.,.00787*92.,4.))*env_AHDSR(_t,tL,.082,.001,.062,.521,.153))"
main        NDV.S34     src="(vel*MADD(_t,f,0.,32,1,-1.,69.85,2.23,.47,2.79,.01,(.4+(.25*_sin(3.*B))),0)*(1.0*(s_atan(GAC(((_t-0.0)-0.0*(1.+.5*_sin(.5*(_t-0.0)))),0.,-.913,.201,.763,.773,.019,.043,-.704)*MADD(((_t-0.0)-0.0*(1.+.5*_sin(.5*(_t-0.0)))),f,0.,32,1,-1.,69.85,2.23,.47,2.79,.01,(.4+(.25*_sin(3.*B))),0))))+.4*env_AHDSR(_t,tL,1.3,0.,.1,1.,.4)*(1.0*s_atan(1.02*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.0),f,0.,200,1,-.4,69.85,2.23,.47,2.79,0.,.39,0),.05*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9))))"
main        NDV.S35     src="(vel*env_AHDSR(_t,tL,1.3,0.,.1,1.,.4)*s_atan((1.0*s_atan(2.83*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.0),f,0.,200,1,-.59,171.92,2.27,4.68,2.91,.02,.88,0),.08*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9)))+(1.0*s_atan(2.83*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.0),f,0.,200,1,-.59,171.92,2.27,4.68,2.91,.02,.88,0),.08*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9)))+(1.0*s_atan(2.83*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.0),f,0.,200,1,-.59,171.92,2.27,4.68,2.91,.02,.88,0),.08*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9))))+.4*env_AHDSR(_t,tL,1.3,0.,.1,1.,.4)*(1.0*s_atan(2.83*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.0),f,0.,200,1,-.59,171.92,2.27,4.68,2.91,.02,.88,0),.08*env_AHDSR((_t-0.0),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9))))"
main        NDV.S39     src=".7*waveshape(.5*env_AHDSR(_t,tL,.02,0.,.35,.05,0.)*(1.00*(_sq_(f*((_t-0.00)-0.00*(1.+1.*_sin(.239*(_t-0.00)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.))))+_sq_(f*((_t-0.00)-1.50e-02*(1.+1.*_sin(.239*(_t-0.00)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.))))+_sq_(f*((_t-0.00)-3.00e-02*(1.+1.*_sin(.239*(_t-0.00)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.))))+_sq_(f*((_t-0.00)-4.50e-02*(1.+1.*_sin(.239*(_t-0.00)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.)))))+8.00e-02*(_sq_(f*((_t-1.23e-01)-0.00*(1.+1.*_sin(.239*(_t-1.23e-01)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.))))+_sq_(f*((_t-1.23e-01)-1.50e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.))))+_sq_(f*((_t-1.23e-01)-3.00e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.))))+_sq_(f*((_t-1.23e-01)-4.50e-02*(1.+1.*_sin(.239*(_t-1.23e-01)))),.5+.09*(.5+(.5*(2.*fract(1533.*Bprog+0.)-1.))))))+.3*(lpnoise((_t-0.00*(1.+.5*_sin(.127*_t))),(6202.91+(4286.45*(2.*fract(8021.77*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-0.00*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-0.00*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-2.40e-02*(1.+.5*_sin(.127*_t))),(6202.91+(4286.45*(2.*fract(8021.77*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-2.40e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-2.40e-02*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-4.80e-02*(1.+.5*_sin(.127*_t))),(6202.91+(4286.45*(2.*fract(8021.77*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-4.80e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-4.80e-02*(1.+.5*_sin(.127*_t)))-.1-0.))+lpnoise((_t-7.20e-02*(1.+.5*_sin(.127*_t))),(6202.91+(4286.45*(2.*fract(8021.77*Bprog+0.)-1.))))*smoothstep(0.,.1,(_t-7.20e-02*(1.+.5*_sin(.127*_t))))*(1.-(1.-.05)*smoothstep(0.,.15,(_t-7.20e-02*(1.+.5*_sin(.127*_t)))-.1-0.))),.2,.02,.4,.37,.7,.7)"
main        NDV.S42     src="(vel*env_AHDSR(_t,tL,.013,0.,.1,1.,.01)*s_atan((1.00*s_atan(2.69*waveshape(MADD((_t-0.00),f,0.,200,1,-.4,44.28,2.12,4.21,2.57,.01,.44,0),.09,0.,.8,.05,1.,.9)))+(1.00*s_atan(2.69*waveshape(MADD((_t-0.00),f,0.,200,1,-.4,44.28,2.12,4.21,2.57,.01,.44,0),.09,0.,.8,.05,1.,.9)))+(1.00*s_atan(2.69*waveshape(MADD((_t-0.00),f,0.,200,1,-.4,44.28,2.12,4.21,2.57,.01,.44,0),.09,0.,.8,.05,1.,.9))))+.4*env_AHDSR(_t,tL,.013,0.,.1,1.,.01)*s_atan(2.69*waveshape(MADD(_t,f,0.,200,1,-.4,44.28,2.12,4.21,2.57,.01,.44,0),.09,0.,.8,.05,1.,.9)))"
main        NDV.S43     src="(vel*env_AHDSR(_t,tL,.013,0.,.1,1.,.01)*s_atan((1.00*s_atan(1.25*waveshape(MADD((_t-0.00),f,0.,200,1,-.54,204.4,.81,4.22,9.81,.02,.2,0),0.,0.,.8,.05,1.,.9)))+(1.00*s_atan(1.25*waveshape(MADD((_t-0.00),f,0.,200,1,-.54,204.4,.81,4.22,9.81,.02,.2,0),0.,0.,.8,.05,1.,.9)))+(1.00*s_atan(1.25*waveshape(MADD((_t-0.00),f,0.,200,1,-.54,204.4,.81,4.22,9.81,.02,.2,0),0.,0.,.8,.05,1.,.9))))+.4*env_AHDSR(_t,tL,.013,0.,.1,1.,.01)*s_atan(1.25*waveshape(MADD(_t,f,0.,200,1,-.54,204.4,.81,4.22,9.81,.02,.2,0),0.,0.,.8,.05,1.,.9)))"
main        NDV.S44     src="(vel*env_AHDSR(_t,tL,1.3,0.,.1,1.,.4)*s_atan((1.00*s_atan(2.58*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.00),f,0.,200,1,-.3,97.61,4.13,.88,1.83,.01,.72,0),.04*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9)))+(1.00*s_atan(2.58*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.00),f,0.,200,1,-.3,97.61,4.13,.88,1.83,.01,.72,0),.04*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9)))+(1.00*s_atan(2.58*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.00),f,0.,200,1,-.3,97.61,4.13,.88,1.83,.01,.72,0),.04*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9))))+.4*env_AHDSR(_t,tL,1.3,0.,.1,1.,.4)*(1.00*s_atan(2.58*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4)*waveshape(MADD((_t-0.00),f,0.,200,1,-.3,97.61,4.13,.88,1.83,.01,.72,0),.04*env_AHDSR((_t-0.00),tL,1.3,0.,.1,1.,.4),0.,.8,.05,1.,.9))))"

main    FMania.0    src="(QFM((_PROG-0.0e+00*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*45.,.00787*5.,.00787*41.,.00787*47.,.5,1.,1.001,1.,.00787*99.,.00787*48.,.00787*85.,.00787*6.,8.)+QFM((_PROG-4.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*45.,.00787*5.,.00787*41.,.00787*47.,.5,1.,1.001,1.,.00787*99.,.00787*48.,.00787*85.,.00787*6.,8.)+QFM((_PROG-8.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*45.,.00787*5.,.00787*41.,.00787*47.,.5,1.,1.001,1.,.00787*99.,.00787*48.,.00787*85.,.00787*6.,8.))*env_AHDSR(_PROG,tL,.061,.062,.093,.108,.085)" release=.4 slidetime=.6 relpower=1
main    FMania.1    src="(QFM((_PROG-0.0e+00*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*76.,.00787*108.,.00787*46.,.00787*125.,.5,1.,1.001,1.,.00787*37.,.00787*93.,.00787*72.,.00787*26.,10.)+QFM((_PROG-4.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*76.,.00787*108.,.00787*46.,.00787*125.,.5,1.,1.001,1.,.00787*37.,.00787*93.,.00787*72.,.00787*26.,10.)+QFM((_PROG-8.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*76.,.00787*108.,.00787*46.,.00787*125.,.5,1.,1.001,1.,.00787*37.,.00787*93.,.00787*72.,.00787*26.,10.))*env_AHDSR(_PROG,tL,.006,.027,.089,.311,.183)" release=.4 slidetime=.6 relpower=1
main    FMania.2    src="(QFM((_PROG-0.0e+00*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*107.,.00787*45.,.00787*104.,.00787*83.,.5,1.,1.001,1.,.00787*9.,.00787*121.,.00787*4.,.00787*82.,2.)+QFM((_PROG-4.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*107.,.00787*45.,.00787*104.,.00787*83.,.5,1.,1.001,1.,.00787*9.,.00787*121.,.00787*4.,.00787*82.,2.)+QFM((_PROG-8.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*107.,.00787*45.,.00787*104.,.00787*83.,.5,1.,1.001,1.,.00787*9.,.00787*121.,.00787*4.,.00787*82.,2.))*env_AHDSR(_PROG,tL,.005,.014,.005,.043,.174)" release=.4 slidetime=.6 relpower=1
main    FMania.3    src="vel*(QFM((_PROG-0.0e+00*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*31.,.00787*85.,.00787*83.,.00787*69.,.5,1.,1.001,1.,.00787*57.,.00787*48.,.00787*77.,.00787*61.,6.)+QFM((_PROG-4.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*31.,.00787*85.,.00787*83.,.00787*69.,.5,1.,1.001,1.,.00787*57.,.00787*48.,.00787*77.,.00787*61.,6.)+QFM((_PROG-8.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*31.,.00787*85.,.00787*83.,.00787*69.,.5,1.,1.001,1.,.00787*57.,.00787*48.,.00787*77.,.00787*61.,6.))*env_AHDSR(_PROG,tL,.008,.008,.19,.289,.059)" release=.4 slidetime=.6 relpower=1
main    FMania.4    src="vel*(QFM((_PROG-0.0e+00*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*5.,.00787*70.,.00787*88.,.00787*113.,.5,1.,1.001,1.,.00787*63.,.00787*66.,.00787*73.,.00787*67.,8.)+QFM((_PROG-4.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*5.,.00787*70.,.00787*88.,.00787*113.,.5,1.,1.001,1.,.00787*63.,.00787*66.,.00787*73.,.00787*67.,8.)+QFM((_PROG-8.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*5.,.00787*70.,.00787*88.,.00787*113.,.5,1.,1.001,1.,.00787*63.,.00787*66.,.00787*73.,.00787*67.,8.))*env_AHDSR(_PROG,tL,.003,.059,.107,.096,.175)" release=.4 slidetime=.6 relpower=1
main    FMania.5    src="vel*(QFM((_PROG-0.0e+00*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*70.,.00787*105.,.00787*87.,.00787*92.,.5,1.,1.001,1.,.00787*110.,.00787*14.,.00787*51.,.00787*34.,1.)+QFM((_PROG-4.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*70.,.00787*105.,.00787*87.,.00787*92.,.5,1.,1.001,1.,.00787*110.,.00787*14.,.00787*51.,.00787*34.,1.)+QFM((_PROG-8.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*70.,.00787*105.,.00787*87.,.00787*92.,.5,1.,1.001,1.,.00787*110.,.00787*14.,.00787*51.,.00787*34.,1.))*env_AHDSR(_PROG,tL,.03,.008,.084,.061,.192)" release=.4 slidetime=.6 relpower=1

random xnvar min=1 max=32 digits=0 store
random xfrqv min=1 max=32 digits=1 store
random xtsvr min=1 max=32 digits=1 store
random xvar1 min=0.1 max=10 digits=2 store
random xvar2 min=0.1 max=10 digits=2 store
random xvar3 min=0.1 max=10 digits=2 store
random xdcay min=0.01 max=1 digits=2 store
drum xplosion shape=bitexplosion nvar=xnvar freqvar=xfrqv twostepvar=xtsvr var1=xvar1 var2=xvar2 var3=xvar3 decay=xdcay
maindrum XPLO src=xplosion release=.5

random pfreq0 min=150 max=300 digits=0 store
random pfreq1 min=40 max=150 digits=0 store
random pfreqdecay min=.005 max=0.03 digits=2 store
random phold min=.02 max=.3 digits=2 store
random pdecay min=.02 max=.3 digits=2 store
random pdrive min=1 max=10 digits=2 store
random pdetune min=0 max=1e-2 digits=4 store
random prev_amount min=0 max=1 digits=2 store
random prev_hold min=.02 max=.3 digits=2 store
random prev_decay min=.1 max=1 digits=2 store
random prev_drive min=.5 max=10 digits=2 store
drum protkick shape=protokick freq0=pfreq0 freq1=pfreq1 freqdecay=pfreqdecay hold=phold decay=pdecay drive=pdrive detune=pdetune rev_amount=prev_amount rev_hold=prev_hold rev_decay=prev_decay rev_drive=prev_drive
maindrum PKIK src=protkick release=.2

random snoiseamp    min=.1  max=1   digits=2    store
random stoneamp     min=.1  max=1   digits=2    store
random sfreq0       min=400 max=700 digits=0    store
random sfreq1       min=150 max=350 digits=0    store
random sfreqdecay   min=.001 max=.05  digits=2  store
random sfmtoneamp   min=.1  max=1   digits=2    store
random sfmtonefreq  min=250 max=2e3 digits=0    store
#random snoise1amt   min=.1  max=1   digits=2   store
random snoise1freq  min=250 max=3e3 digits=0    store
#random snoise2amt   min=.1  max=1   digits=2   store
random snoise2freq  min=250 max=3e3 digits=0    store
#random snoise3amt   min=.1  max=1   digits=2   store
random snoise3freq  min=250 max=3e3 digits=0    store
random snoise1amt   min=0  max=0   digits=2     store
random snoise2amt   min=0  max=0   digits=2     store
random snoise3amt   min=0  max=0   digits=2     store
random sattack      min=0   max=.02  digits=2   store
random sdecay       min=0   max=1  digits=2     store
random srelease     min=0   max=1  digits=2     store
random stonedecayexp min=.2 max=10  digits=1    store
random sfmtonedecayexp min=.2 max=10 digits=1   store
drum protsnare shape=protosnare noise_amp=snoiseamp tone_amp=stoneamp freq0=sfreq0 freq1=sfreq1 freqdecay=sfreqdecay fmtone_amp=sfmtoneamp fmtone_freq=sfmtonefreq noise1_amount=snoise1amt noise1_freq=snoise1freq noise2_amount=snoise2amt noise2_freq=snoise2freq noise3_amount=snoise3amt noise3_freq=snoise3freq attack=sattack decay=sdecay release=srelease tone_decayexp=stonedecayexp fmtone_decayexp=sfmtonedecayexp
maindrum PSNR src=protsnare release=.15

maindrum    PKIK0    src="protokick(_PROG,326.,138.,.09,.16,.26,1.47,.0021,.81,.19,.62,1.07)" release=.2 relpower=1 slidetime=.125
maindrum    PKIK1    src="protokick(_PROG,179.,57.,.21,.11,.82,.79,.0063,.9,.17,.45,.6)" release=.2 relpower=1 slidetime=.125
maindrum    PKIK2    src="protokick(_PROG,307.,64.,.23,.24,.38,.68,.0079,.14,.16,.21,1.99)" release=.2 relpower=1 slidetime=.125
maindrum    PSNR0    src=".6*(.96*lpnoise(_PROG,2938.)+.97*lpnoise(_PROG,2952.)+.19*lpnoise(_PROG,2154.))*(smoothstep(0.,.1,_PROG)-smoothstep(0.,.69,_PROG-.09))+_sin(drop_phase(_PROG,.67,485.,217.))*exp(-_PROG*14.4)*.53+_sin(drop_phase(_PROG*1404.,.67,485.,217.))*exp(-_PROG*13.9)*.16" release=.15 relpower=1 slidetime=.125
maindrum    PKIK3    src="protokick(_PROG,224.,49.,.04,.04,.67,1.58,.0082,.42,.28,.8,1.18)" release=.2 relpower=1 slidetime=.125
maindrum    PKIK4    src="protokick(_PROG,221.,73.,.12,.11,.19,2.97,.0079,.92,.25,.14,1.57)" release=.2 relpower=1 slidetime=.125
maindrum    PKIK5    src="protokick(_PROG,272.,95.,.04,.05,.52,7.26,.0004,.24,.2,.53,8.81)" release=.2 relpower=1 slidetime=.125
maindrum    PSNR1    src=".12*(.47*lpnoise(_PROG,2689.)+.43*lpnoise(_PROG,2535.)+.36*lpnoise(_PROG,1208.))*(smoothstep(0.,.06,_PROG)-smoothstep(0.,.84,_PROG-.47))+_sin(drop_phase(_PROG,.22,444.,238.))*exp(-_PROG*10.5)*.44+_sin(drop_phase(_PROG*1901.,.22,444.,238.))*exp(-_PROG*3.3)*.87" release=.15 relpower=1 slidetime=.125
maindrum    PKIK6    src="protokick(_PROG,268.,100.,.1,.09,.5,8.39,.0027,.17,.1,.51,4.39)" release=.2 relpower=1 slidetime=.125

random afreq0           min=140     max=350     digits=0    store
random afreq1           min=50      max=120     digits=0    store
random afreqdecay       min=.01     max=.1      digits=2    store
random aattack          min=2e-3    max=1e-2    digits=3    store
random adecay           min=0.01    max=0.3     digits=2    store       
random adrive           min=.5      max=3       digits=2    store
random arev1_amt        min=0       max=1       digits=2    store
random arev1_tone       min=500     max=9999    digits=0    store
random arev1_exp        min=1       max=30      digits=2    store
random arev1_drive      min=0       max=1       digits=2    store
random arev2_amt        min=0       max=1       digits=2    store
random arev2_tone       min=500     max=9999    digits=0    store
random arev2_exp        min=1       max=30      digits=2    store
random arev3_amt        min=0       max=1       digits=2    store
random arev3_tone       min=500     max=9999    digits=0    store
random arev3_exp        min=1       max=30      digits=2    store
random anoise_amt       min=0       max=0.1     digits=2    store
random anoise_hold      min=.01     max=.99     digits=2    store
random anoise_decay     min=.01     max=.99     digits=2    store
random anoise_tone      min=999     max=19999   digits=0    store
drum protkickass shape=protokickass freq0=afreq0 freq1=afreq1 freqdecay=afreqdecay attack=aattack decay=adecay drive=adrive rev1_amt=arev1_amt rev2_amt=arev2_amt rev3_amt=arev3_amt rev1_tone=arev1_tone rev2_tone=arev2_tone rev3_tone=arev3_tone rev1_exp=arev1_exp rev2_exp=arev2_exp rev3_exp=arev3_exp rev1_drive=arev1_drive noise_amt=anoise_amt noise_hold=anoise_hold noise_decay=anoise_decay noise_tone=anoise_tone
maindrum ASSK src=protkickass release=.00

random shkamp           min=2      max=20       digits=2    store
random shktimbre        min=.1      max=9       digits=2    store
random shkdecay         min=.005    max=.02     digits=3    store
random shkrelease       min=0       max=.03     digits=3    store
drum protshake shape=protoshake amp=shkamp timbre=shktimbre decay=shkdecay release=shkrelease
maindrum SHAG src=protshake release=0

maindrum    ASSK0    src="(clamp(4.63*_tri(drop_phase(_PROG,.04,245.,72.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.23))+.96*clamp(.98*_tri(drop_phase(_PROG,.04,245.,72.)+.96*lpnoise(_PROG,8333.)),-1.,1.)*exp(-28.24*_PROG)+.11*lpnoise(_PROG,19622.)*(1.-smoothstep(0.,.06,_PROG-.27))+.79*lpnoise(_PROG,5824.)*exp(-_PROG*1.81)+.22*lpnoise(_PROG,8242.)*exp(-_PROG*3.33))*smoothstep(0.,.01,_PROG)" release=.4 relpower=1 slidetime=.125
maindrum    SHAG0    src=".54*lpnoise(_PROG,1.+5.51*_PROG)*(smoothstep(0.,1e-3,_PROG)-smoothstep(0.,.016,_PROG-.274))" release=0 relpower=1 slidetime=.125
maindrum    ASSK1    src="(clamp(1.53*_tri(drop_phase(_PROG,.08,213.,103.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.99))+.91*clamp(.16*_tri(drop_phase(_PROG,.08,213.,103.)+.91*lpnoise(_PROG,7763.)),-1.,1.)*exp(-21.58*_PROG)+.65*lpnoise(_PROG,7650.)*(1.-smoothstep(0.,.98,_PROG-.26))+.37*lpnoise(_PROG,8300.)*exp(-_PROG*21.35)+.8*lpnoise(_PROG,8062.)*exp(-_PROG*1.14))*smoothstep(0.,.008,_PROG)" release=.4 relpower=1 slidetime=.125
maindrum    ASSK2    src="(clamp(.72*_tri(drop_phase(_PROG,.07,227.,107.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.09))+.69*clamp(.94*_tri(drop_phase(_PROG,.07,227.,107.)+.69*lpnoise(_PROG,8709.)),-1.,1.)*exp(-13.89*_PROG)+.06*lpnoise(_PROG,18745.)*(1.-smoothstep(0.,.67,_PROG-.17))+.28*lpnoise(_PROG,7506.)*exp(-_PROG*12.44)+.82*lpnoise(_PROG,2600.)*exp(-_PROG*17.54))*smoothstep(0.,.004,_PROG)" release=.4 relpower=1 slidetime=.125
#maindrum    SHAG1   src=".79*lpnoise(_PROG,1.+3.31*_PROG)*(smoothstep(0.,1e-3,_PROG)-smoothstep(0.,.018,_PROG-.196))" release=0 relpower=1 slidetime=.125
maindrum    SHAG1    src=".79*lpnoise(_PROG,1.+3.31*_PROG)*(smoothstep(0.,1e-3,_PROG)-smoothstep(0.,.018,_PROG-.196))" release=0.2 relpower=1 slidetime=.125
maindrum    ASS-SNR3 src="(clamp(1.09*_tri(drop_phase(_PROG,.08,249.,77.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.04))+.97*clamp(.99*_tri(drop_phase(_PROG,.08,249.,77.)+.97*lpnoise(_PROG,9855.)),-1.,1.)*exp(-21.22*_PROG)+.03*lpnoise(_PROG,10655.)*(1.-smoothstep(0.,.58,_PROG-.81))+.71*lpnoise(_PROG,7520.)*exp(-_PROG*16.22)+.57*lpnoise(_PROG,4386.)*exp(-_PROG*29.48))*smoothstep(0.,.005,_PROG)" release=.4 relpower=1 slidetime=.125

maindrum    ASS-SNR4 src="(clamp(1.09*_tri(drop_phase(_PROG,.08,249.,77.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.04))+.97*clamp(.99*_tri(drop_phase(_PROG,.08,249.,77.)+.97*lpnoise(_PROG,9855.)),-1.,1.)*exp(-21.22*_PROG)+.03*lpnoise(_PROG,10655.)*(1.-smoothstep(0.,.58,_PROG-.81))+.71*lpnoise(_PROG,7520.)*exp(-_PROG*16.22)+.57*lpnoise(_PROG,4386.)*exp(-_PROG*29.48))*smoothstep(0.,.005,_PROG)" release=.4 relpower=1 slidetime=.125
maindrum    PKIK7    src="protokick(_PROG,218.,57.,.02,.09,.16,7.16,.0095,.53,.02,.77,2.35)" release=.2 relpower=1 slidetime=.125

main    FQMbace.0    src="vel*QFM(_PROG,f,0.,.00787*94.,.00787*6.,.00787*38.,.00787*89.,.5,1.,1.001,1.,.00787*76.,.00787*63.,.00787*63.,.00787*82.,5.)*env_AHDSR(_PROG,tL,.029,0.,.01,1.,.01)" release=.4 slidetime=.6 relpower=1
main    FQMbace.1    src="vel*waveshape(QFM(_PROG,f,0.,.00787*0.,.00787*42.,.00787*119.,.00787*36.,.5,1.,1.001,1.,.00787*53.,.00787*21.,.00787*7.,.00787*16.,3.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.012,0.,.01,1.,.003)" release=.4 slidetime=.6 relpower=1
main    FQMbace.2    src="vel*waveshape(QFM(_PROG,2.*f,0.,.00787*92.,.00787*44.,.00787*21.,.00787*37.,.5,1.,1.001,1.,.00787*66.,.00787*32.,.00787*105.,.00787*37.,5.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.022,0.,.01,1.,.007)" release=.4 slidetime=.6 relpower=1
main    FQMbace.3    src="vel*waveshape(QFM(_PROG,2.*f,0.,.00787*4.,.00787*91.,.00787*111.,.00787*27.,.5,1.,1.001,1.,.00787*28.,.00787*32.,.00787*21.,.00787*115.,7.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.017,0.,.01,1.,.005)+vel*(floor(256.*QFM((_PROG-0.0e+00*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*4.,.00787*91.,.00787*111.,.00787*27.,.5,1.,1.001,1.,.00787*28.,.00787*32.,.00787*21.,.00787*115.,7.)+.5)*3.9e-03+floor(256.*QFM((_PROG-4.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*4.,.00787*91.,.00787*111.,.00787*27.,.5,1.,1.001,1.,.00787*28.,.00787*32.,.00787*21.,.00787*115.,7.)+.5)*3.9e-03+floor(256.*QFM((_PROG-8.0e-03*(1.+3.*_sin(.1*_PROG))),f,0.,.00787*4.,.00787*91.,.00787*111.,.00787*27.,.5,1.,1.001,1.,.00787*28.,.00787*32.,.00787*21.,.00787*115.,7.)+.5)*3.9e-03)*env_AHDSR(_PROG,tL,.017,0.,.01,1.,.005)" release=.4 slidetime=.6 relpower=1
main    macebace.0   src="env_AHDSR(_PROG,tL,.015,0.,.01,1.,.004)*clip(2.*(.55+(.4*clip((1.+1.)*_sin(4.*B))))*MADD(_PROG,f,0.,256,2,1+.9*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),(1612.+(315.*_sin_(2.*B,.4))),6.,9.16,8.46,0.,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0))" release=1e-2 relpower=1 slidetime=.125
main    macebace.1   src="env_AHDSR(_PROG,tL,.029,0.,.01,1.,.006)*clip(2.*(.55+(.4*clip((1.+1.)*_sin(4.*B))))*MADD(_PROG,f,0.,256,2,1+.9*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),(1499.+(380.*_sin_(2.*B,.4))),9.,6.32,1.42,.014,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0))" release=1e-2 relpower=1 slidetime=.125
maindrum    ASSK3    src="(clamp(2.71*_tri(drop_phase(_PROG,.04,198.,80.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.07))+.24*clamp(.38*_tri(drop_phase(_PROG,.04,198.,80.)+.24*lpnoise(_PROG,5479.)),-1.,1.)*exp(-9.66*_PROG)+.98*lpnoise(_PROG,15335.)*(1.-smoothstep(0.,.63,_PROG-.32))+.63*lpnoise(_PROG,8519.)*exp(-_PROG*29.69)+.65*lpnoise(_PROG,976.)*exp(-_PROG*10.68))*smoothstep(0.,.008,_PROG)" release=.4 relpower=1 slidetime=.125
maindrum    ASSK4    src="(clamp(1.54*_tri(drop_phase(_PROG,.06,254.,67.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.25))+.48*clamp(.83*_tri(drop_phase(_PROG,.06,254.,67.)+.48*lpnoise(_PROG,1022.)),-1.,1.)*exp(-18.09*_PROG)+.39*lpnoise(_PROG,14859.)*(1.-smoothstep(0.,.51,_PROG-.47))+.25*lpnoise(_PROG,2739.)*exp(-_PROG*22.61)+.34*lpnoise(_PROG,5121.)*exp(-_PROG*23.75))*smoothstep(0.,.003,_PROG)" release=.4 relpower=1 slidetime=.125

maindrum    ASSK5    src="(clamp(2.24*_tri(drop_phase(_PROG,.08,217.,64.)),-1.,1.)*(1.-smoothstep(-1e-3,0.,_PROG-.29))+.7*clamp(.84*_tri(drop_phase(_PROG,.08,217.,64.)+.7*lpnoise(_PROG,1936.)),-1.,1.)*exp(-23.11*_PROG)+.08*lpnoise(_PROG,5166.)*(1.-smoothstep(0.,.16,_PROG-.55))+.77*lpnoise(_PROG,6784.)*exp(-_PROG*29.89)+.53*lpnoise(_PROG,4404.)*exp(-_PROG*24.64))*smoothstep(0.,.002,_PROG)" release=.00 relpower=1 slidetime=.125
maindrum    PSNR2    src=".57*(0.*lpnoise(_PROG,981.)+0.*lpnoise(_PROG,950.)+0.*lpnoise(_PROG,2937.))*(smoothstep(0.,0.,_PROG)-smoothstep(0.,.13,_PROG-.76))+_sin(drop_phase(_PROG,.04,607.,288.))*exp(-_PROG*4.5)*.46+_sin(drop_phase(_PROG*1076.,.04,607.,288.))*exp(-_PROG*9.6)*.49" release=.15 relpower=1 slidetime=.125

main    FQMbace.4    src="0.*vel*waveshape(QFM(_PROG,4.*f,0.,.00787*5.,.00787*81.,.00787*61.,.00787*46.,.5,1.,1.001,1.,.00787*106.,.00787*53.,.00787*78.,.00787*91.,1.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.022,0.,.01,1.,.004)+vel*QFM(_PROG,f,0.,.00787*5.,.00787*81.,.00787*61.,.00787*46.,.5,1.,1.001,1.,.00787*106.,.00787*53.,.00787*78.,.00787*91.,1.)*env_AHDSR(_PROG,tL,.022,0.,.01,1.,.004)" release=.2 slidetime=.6 relpower=1
main    FQMimp.0     src="vel*waveshape(QFM(_PROG,4.*f,0.,.00787*43.,.00787*94.,.00787*121.,.00787*41.,.5,1.,1.001,1.,.00787*81.,.00787*62.,.00787*65.,.00787*61.,1.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.2,0.,.01,1.,.05)+(.5+.5*vel)*clip((1.+2.)*_sin(f*_PROG))" release=.15 relpower=1 slidetime=.125
main    FQMhigh.0    src=".5*vel*waveshape(QFM(_PROG,f,0.,.00787*92.*(.6+(.3*_sin(.32*B))),.00787*87.*(.6+(.3*_sin(.761*B))),.00787*112.*(.6+(.3*_sin(.115*B))),.00787*57.*(.6+(.3*_sin(.362*B))),1.,.998,1.001,1.,.00787*9.,.00787*78.,.00787*115.,.00787*27.,9.),(.5+(.5*_sin(.431*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.001,.15,.2,.04,.8)" release=.8 relpower=1 slidetime=.125
main    FQMhigh.1    src=".5*vel*waveshape(QFM(_PROG,f,0.,.00787*118.*(.6+(.3*_sin(.412*B))),.00787*98.*(.6+(.3*_sin(.412*B))),.00787*65.*(.6+(.3*_sin(.412*B))),.00787*86.*(.6+(.3*_sin(.412*B))),1.,.998,1.001,1.,.00787*57.,.00787*54.,.00787*108.,.00787*113.,10.),(.5+(.5*_sin(.412*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.001,.15,.15,.04,.6)" release=.6 relpower=1 slidetime=.125
main    FQMhigh.2    src=".5*vel*waveshape(QFM(_PROG,f,0.,.00787*60.*(.6+(.3*_sin(.687*B))),.00787*92.*(.6+(.3*_sin(.687*B))),.00787*41.*(.6+(.3*_sin(.687*B))),.00787*74.*(.6+(.3*_sin(.687*B))),1.,.998,1.001,1.,.00787*56.,.00787*62.,.00787*44.,.00787*88.,3.),(.5+(.5*_sin(.687*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.001,.15,.15,.04,.6)" release=.6 relpower=1 slidetime=.125
main    FQMhigh.3    src=".5*vel*waveshape(QFM(_PROG,f,0.,.00787*45.*(1.+(.49*_sin(.87*B))),.00787*125.*(1.+(.091*_sin(.87*B))),.00787*127.*(1.+(.462*_sin(.87*B))),.00787*33.*(1.+(.304*_sin(.87*B))),1.,.998,1.001,1.,.00787*86.,.00787*37.,.00787*26.,.00787*121.,5.),(.5+(.5*_sin(.87*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.001,.15,.15,.04,.6)" release=.6 relpower=1 slidetime=.125

maindrum    XPLO0    src="bitexplosion(_PROG,_BPROG,18.,1.5,4.3,2.21,1.35,2.69,2.02)" release=.5 relpower=1 slidetime=.125
maindrum    XPLO1    src="bitexplosion(_PROG,_BPROG,12.,27.9,13.7,.41,4.28,7.68,.16)" release=.5 relpower=1 slidetime=.125
maindrum    XPLO2    src="bitexplosion(_PROG,_BPROG,24.,4.4,10.6,1.41,9.8,1.36,.37)" release=.5 relpower=1 slidetime=.125
maindrum    XPLO3    src="bitexplosion(_PROG,_BPROG,13.,2.1,1.7,8.68,3.48,.93,.58)" release=.5 relpower=1 slidetime=.125

main    FQMhigh.4    src=".5*vel*waveshape(QFM(_PROG,f,0.,.00787*115.*(1.+(.225*_sin(.861*B))),.00787*36.*(1.+(.26*_sin(.861*B))),.00787*51.*(1.+(.309*_sin(.861*B))),.00787*34.*(1.+(.199*_sin(.861*B))),1.,.998,1.001,1.,.00787*93.,.00787*36.,.00787*98.,.00787*98.,5.),(.5+(.5*_sin(.861*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.001,.15,.15,.04,.6)" release=.6 relpower=1 slidetime=.125

random chpattack    min=0       max=5e-2    digits=3    store
random chpdecay     min=0.05    max=0.2     digits=3    store
random chpsustain   min=.05     max=1     digts=3     store
random chprelease   min=1e-3    max=4e-2    digits=3    store
random chplfoscale  min=200     max=950     digits=0    store
random chplfoshift  min=1000    max=2000    digits=0    store
random chpndecay    min=1       max=32      digits=0    store
random chpres       min=0       max=0      digits=3    store
random chpresq      min=1e-2    max=30      digits=2    store
random chpdetune    min=0       max=0.025   digits=3    store
random chpshape     min=-1      max=2       digits=2    store
osc chippy_syn shape=madd freq=f nmax=128 ninc=1 mix=chpshape cutoff=chippy_lfo q=chpndecay res=chpres resq=chpresq pw=0.4*chippy_synlfo detune=chpdetune
form chippy_synQ quantize src=chippy_syn bits=16000
form chippy_synOD waveshape src=chippy_synQ amount=vel a=.1 b=.5 c=.2 d=.5 e=.6
lfo chippy_synlfo shape=sin freq=4 phase=0 scale=.4 shift=.55 overdrive=1 mode=global
lfo chippy_lfo shape=sin freq=2 phase=.4 scale=chplfoscale shift=chplfoshift mode=global
env chippy_env shape=adsr attack=chpattack decay=chpdecay sustain=chpsustain release=chprelease
main chippy src=vel*chippy_env*chippy_synQ release=4e-2

osc chappy_syn shape=badd freq=f mix=chpshape amp=5 peak=chplfoshift sigma=chplfoscale ncut=20 pw=0.2 detune=chpdetune
#form chappy_synQ quantize src=chappy_syn bits=16000
form chappy_synOD waveshape src=chappy_syn amount=vel a=.1 b=.5 c=.2 d=.5 e=.6
lfo chappy_synlfo shape=sin freq=4 phase=0 scale=.4 shift=.55 overdrive=1 mode=global
lfo chappy_lfo shape=sin freq=2 phase=.4 scale=chplfoscale shift=chplfoshift mode=global
env chappy_env shape=adsr attack=1e-4 decay=chpdecay sustain=chpsustain release=.4
main chappy src=vel*chappy_env*chappy_syn release=.4

main    chippy.0    src="env_AHDSR(_PROG,tL,0.,0.,.063,.402,.003)*MADD(_PROG,f,0.,128,1,-.6,(1175.+(583.*_sin_(2.*B,.4))),24.,44.37,24.05,.015,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    chippy.1    src="vel*env_AHDSR(_PROG,tL,0.,0.,.173,.289,.019)*MADD(floor(8000.*_PROG+.5)/8000.,f,0.,128,1,-.25,(1342.+(216.*_sin_(2.*B,.4))),23.,0.,14.43,.018,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    chippy.2    src="vel*env_AHDSR(_PROG,tL,0.,0.,.072,.865,.001)*MADD(floor(8000.*_PROG+.5)/8000.,f,0.,128,1,-.49,(1265.+(535.*_sin_(2.*B,.4))),15.,0.,10.28,.016,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    chippy.3    src="vel*env_AHDSR(_PROG,tL,.012,0.,.197,.91,.014)*MADD(floor(16000.*_PROG+.5)/16000.,f,0.,128,1,-.57,(1309.+(645.*_sin_(2.*B,.4))),5.,0.,14.95,.019,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    chippy.4    src="vel*env_AHDSR(_PROG,tL,.01,0.,.115,.215,.033)*MADD(floor(16000.*_PROG+.5)/16000.,f,0.,128,1,-.83,(1277.+(534.*_sin_(2.*B,.4))),19.,0.,.27,.007,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    chippy.5    src="vel*env_AHDSR(_PROG,tL,.028,0.,.144,.912,.006)*MADD(floor(16000.*_PROG+.5)/16000.,f,0.,128,1,1.43,(1567.+(906.*_sin_(2.*B,.4))),17.,0.,29.76,.006,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    chippy.6    src="vel*env_AHDSR(_PROG,tL,.035,0.,.142,.61,.035)*MADD(floor(16000.*_PROG+.5)/16000.,f,0.,128,1,-.83,(1901.+(776.*_sin_(2.*B,.4))),18.,0.,17.9,.016,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    FQMbace.5   src="vel*QFM(_PROG,f,0.,.00787*71.,.00787*52.,.00787*91.,.00787*99.,.5,1.,1.001,1.,.00787*49.,.00787*104.,.00787*65.,.00787*90.,7.)*env_AHDSR(_PROG,tL,.023,0.,.01,1.,.006)" release=.2 slidetime=.6 relpower=1
main    FQMbace.6   src="vel*QFM(_PROG,f,0.,.00787*110.,.00787*90.,.00787*54.,.00787*71.,.5,1.,1.001,1.,.00787*60.,.00787*40.,.00787*68.,.00787*9.,10.)*env_AHDSR(_PROG,tL,.02,0.,.01,1.,.003)" release=.2 slidetime=.6 relpower=1
main    FQMimp.1    src="vel*waveshape(QFM(_PROG,f,0.,.00787*54.,.00787*82.,.00787*86.,.00787*64.,.5,1.,1.001,1.,.00787*95.,.00787*83.,.00787*18.,.00787*83.,10.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.2,0.,.01,1.,.05)+vel*clip((1.+2.)*_sin(f*_PROG))" release=.05 relpower=1 slidetime=.125
main    FQMimp.2    src="vel*waveshape(QFM(_PROG,f,0.,.00787*0.,.00787*119.,.00787*92.,.00787*101.,.5,1.,1.001,1.,.00787*100.,.00787*61.,.00787*25.,.00787*9.,1.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.2,0.,.01,1.,.05)+vel*clip((1.+2.)*_sin(f*_PROG))" release=.05 relpower=1 slidetime=.125
main    FQMbace.7   src="vel*QFM(_PROG,f,0.,.00787*24.,.00787*92.,.00787*85.,.00787*21.,.5,1.,1.001,1.,.00787*126.,.00787*48.,.00787*26.,.00787*26.,9.)*env_AHDSR(_PROG,tL,.013,0.,.01,1.,.008)" release=.2 slidetime=.6 relpower=1
main    FQMbace.8   src="vel*QFM(_PROG,f,0.,.00787*20.,.00787*17.,.00787*54.,.00787*33.,.5,1.,1.001,1.,.00787*126.,.00787*19.,.00787*23.,.00787*36.,6.)*env_AHDSR(_PROG,tL,.007,0.,.01,1.,.006)" release=.2 slidetime=.6 relpower=1
main    FQMimp.3    src="vel*waveshape(QFM(_PROG,f,0.,.00787*75.,.00787*59.,.00787*26.,.00787*53.,.5,1.,1.001,1.,.00787*1.,.00787*93.,.00787*18.,.00787*17.,7.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.2,0.,.01,1.,.05)+vel*clip((1.+2.)*_sin(f*_PROG))" release=.05 relpower=1 slidetime=.125
main    chippy.7    src="vel*env_AHDSR(_PROG,tL,.05,0.,.185,.406,.037)*MADD(floor(16000.*_PROG+.5)/16000.,f,0.,128,1,-.13,(1236.+(527.*_sin_(2.*B,.4))),7.,0.,25.06,.023,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125
main    chippy.8    src="vel*env_AHDSR(_PROG,tL,0.,0.,.073,.611,.023)*MADD(floor(16000.*_PROG+.5)/16000.,f,0.,128,1,-.76,(1665.+(496.*_sin_(2.*B,.4))),5.,0.,13.79,.001,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0)" release=4e-2 relpower=1 slidetime=.125

random strchlfofreq     min=0.001   max=0.999   digits=3    store
random strchlfoscale    min=300     max=3000    digits=0    store
random strchlfoshift    min=300     max=8000    digits=0    store
random strchlfood       min=0       max=1       digits=3    store
random strchndecay      min=0       max=20      digits=3    store
random strchres         min=0       max=2       digits=3    store
random strchresq        min=0       max=10      digits=2    store
random strchpm          min=-.99    max=.99     digits=2    store
random strchdetune      min=0       max=.03     digits=3    store
random strchattack      min=0.01    max=0.5     digits=3    store
random strchrelease     min=0.01    max=0.5     digits=3    store
random strchshape       min=-1      max=0       digits=3    store
osc stricher_syn shape=madd freq=f nmax=256 ninc=1 mix=strchshape cutoff=stricher_synlfo q=strchndecay res=strchres resq=strchresq pw=strchpm detune=strchdetune
osc stricher_syn2 shape=madd freq=.501*f nmax=64 ninc=1 mix=strchshape cutoff=stricher_synlfo q=strchndecay res=strchres resq=strchresq pw=.2*strchpm detune=strchdetune
form stricher_synOD waveshape src=stricher_syn amount=strchpm a=.1 b=.5 c=.2 d=.5 e=.6
lfo stricher_synlfo shape=sin freq=strchlfofreq phase=0 scale=strchlfoscale shift=strchlfoshift overdrive=strchlfood mode=global
env stricher_env shape=ahdsr attack=strchattack sustain=1 release=strchrelease
main strichr src=.7*vel*stricher_env*stricher_synOD+0.6*vel*stricher_env*stricher_syn2 release=0.26

main    strichr.0    src="vel*env_AHDSR(_PROG,tL,.253,0.,.1,1.,.094)*waveshape(MADD(_PROG,f,0.,256,1,.7,(1308.+(1523.*clip((1.+.57)*_sin(.785*B)))),2.675,.692,2.18,.02,-.41,0),0.,.1,.5,.2,.5,.6)" release=0.2 relpower=1 slidetime=.125
main    strichr.1    src="vel*env_AHDSR(_PROG,tL,.366,0.,.1,1.,.404)*waveshape(MADD(_PROG,f,0.,256,1,.7,(1429.+(1715.*clip((1.+.273)*_sin(.427*B)))),2.965,.675,5.47,.002,-.86,0),0.,.1,.5,.2,.5,.6)" release=0.2 relpower=1 slidetime=.125
main    strichr.2    src="vel*env_AHDSR(_PROG,tL,.498,0.,.1,1.,.338)*waveshape(MADD(_PROG,f,0.,256,1,-1.,(1422.+(2572.*clip((1.+.297)*_sin(.661*B)))),12.267,.594,8.74,.008,-.75,0),0.,.1,.5,.2,.5,.6)" release=0.2 relpower=1 slidetime=.125
main    strichr.3    src="vel*env_AHDSR(_PROG,tL,.286,0.,.1,1.,.274)*waveshape(MADD(_PROG,f,0.,256,1,-1.,(6316.+(341.*clip((1.+.056)*_sin(.877*B)))),12.671,1.006,4.96,.024,.08,0),0.,.1,.5,.2,.5,.6)" release=0.2 relpower=1 slidetime=.125
main    strichr.4    src="vel*env_AHDSR(_PROG,tL,.365,0.,.1,1.,.336)*waveshape(MADD(_PROG,f,0.,256,1,-.741,(3602.+(2717.*clip((1.+.161)*_sin(.517*B)))),.735,1.194,3.04,.03,-.15,0),0.,.1,.5,.2,.5,.6)" release=0.2 relpower=1 slidetime=.125
main    strichr.5    src="vel*env_AHDSR(_PROG,tL,.457,0.,.1,1.,.24)*waveshape(MADD(_PROG,f,0.,256,1,-.755,(4169.+(2267.*clip((1.+.008)*_sin(.234*B)))),1.361,.251,8.87,.019,.1,0),0.,.1,.5,.2,.5,.6)" release=0.2 relpower=1 slidetime=.125
main    strichr.6    src="vel*env_AHDSR(_PROG,tL,.364,0.,.1,1.,.124)*waveshape(MADD(_PROG,f,0.,256,1,-.121,(3604.+(1383.*clip((1.+.859)*_sin(.592*B)))),13.304,.111,1.03,.01,.23,0),0.,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.364,0.,.1,1.,.124)*MADD(_PROG,.501*f,0.,64,1,-.121,(3604.+(1383.*clip((1.+.859)*_sin(.592*B)))),13.304,.111,1.03,.01,.2*.23,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.7    src="vel*env_AHDSR(_PROG,tL,.292,0.,.1,1.,.436)*waveshape(MADD(_PROG,f,0.,256,1,-.192,(2662.+(1396.*clip((1.+.402)*_sin(.134*B)))),8.942,.259,4.59,.002,.17,0),.17,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.292,0.,.1,1.,.436)*MADD(_PROG,.501*f,0.,64,1,-.192,(2662.+(1396.*clip((1.+.402)*_sin(.134*B)))),8.942,.259,4.59,.002,.2*.17,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.8    src="vel*env_AHDSR(_PROG,tL,.473,0.,.1,1.,.113)*waveshape(MADD(_PROG,f,0.,256,1,-.574,(6648.+(1263.*clip((1.+.196)*_sin(.93*B)))),16.782,1.006,1.29,.012,.26,0),.26,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.473,0.,.1,1.,.113)*MADD(_PROG,.501*f,0.,64,1,-.574,(6648.+(1263.*clip((1.+.196)*_sin(.93*B)))),16.782,1.006,1.29,.012,.2*.26,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.9    src="vel*env_AHDSR(_PROG,tL,.018,0.,.1,1.,.073)*waveshape(MADD(_PROG,f,0.,256,1,-.791,(2494.+(2175.*clip((1.+.136)*_sin(.148*B)))),7.18,.897,.58,.004,-.78,0),-.78,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.018,0.,.1,1.,.073)*MADD(_PROG,.501*f,0.,64,1,-.791,(2494.+(2175.*clip((1.+.136)*_sin(.148*B)))),7.18,.897,.58,.004,.2*-.78,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.12   src="vel*env_AHDSR(_PROG,tL,.388,0.,.1,1.,.275)*waveshape(MADD(_PROG,f,0.,256,1,-.143,(6861.+(2407.*clip((1.+.958)*_sin(.493*B)))),9.726,1.282,7.24,.002,-.64,0),-.64,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.388,0.,.1,1.,.275)*MADD(_PROG,.501*f,0.,64,1,-.143,(6861.+(2407.*clip((1.+.958)*_sin(.493*B)))),9.726,1.282,7.24,.002,.2*-.64,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.13   src="vel*env_AHDSR(_PROG,tL,.396,0.,.1,1.,.381)*waveshape(MADD(_PROG,f,0.,256,1,-.695,(6326.+(862.*clip((1.+.39)*_sin(.652*B)))),19.795,1.863,.05,.013,.54,0),.54,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.396,0.,.1,1.,.381)*MADD(_PROG,.501*f,0.,64,1,-.695,(6326.+(862.*clip((1.+.39)*_sin(.652*B)))),19.795,1.863,.05,.013,.2*.54,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.14   src="vel*env_AHDSR(_PROG,tL,.271,0.,.1,1.,.466)*waveshape(MADD(_PROG,f,0.,256,1,-.282,(2310.+(1914.*clip((1.+.934)*_sin(.201*B)))),2.617,1.495,5.64,.002,.25,0),.25,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.271,0.,.1,1.,.466)*MADD(_PROG,.501*f,0.,64,1,-.282,(2310.+(1914.*clip((1.+.934)*_sin(.201*B)))),2.617,1.495,5.64,.002,.2*.25,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.15   src="vel*env_AHDSR(_PROG,tL,.158,0.,.1,1.,.17)*waveshape(MADD(_PROG,f,0.,256,1,-.388,(5141.+(2277.*clip((1.+.681)*_sin(.126*B)))),9.292,1.023,4.85,.016,-.86,0),-.86,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.158,0.,.1,1.,.17)*MADD(_PROG,.501*f,0.,64,1,-.388,(5141.+(2277.*clip((1.+.681)*_sin(.126*B)))),9.292,1.023,4.85,.016,.2*-.86,0)" release=0.26 relpower=1 slidetime=.125
main    strichr.16   src=".7*vel*env_AHDSR(_PROG,tL,.406,0.,.1,1.,.031)*waveshape(MADD(_PROG,f,0.,256,1,-.523,(2598.+(810.*clip((1.+.744)*_sin(.235*B)))),9.903,1.872,6.88,.004,.68,0),.68,.1,.5,.2,.5,.6)+.6*vel*env_AHDSR(_PROG,tL,.406,0.,.1,1.,.231)*MADD(_PROG,.501*f,0.,64,1,-.523,(2598.+(810.*clip((1.+.744)*_sin(.235*B)))),9.903,1.872,6.88,.004,.2*.68,0)" release=0.4 relpower=1 slidetime=.125
main    FQMbace.9    src="vel*QFM(_PROG,f,0.,.00787*84.,.00787*72.,.00787*107.,.00787*101.,.5,1.,1.001,1.,.00787*19.,.00787*56.,.00787*66.,.00787*106.,3.)*env_AHDSR(_PROG,tL,.024,0.,.01,1.,.003)" release=.2 slidetime=.6 relpower=1
main    FQMbace.10   src="vel*QFM(_PROG,f,0.,.00787*122.,.00787*2.,.00787*4.,.00787*108.,.5,1.,1.001,1.,.00787*3.,.00787*38.,.00787*89.,.00787*29.,11.)*env_AHDSR(_PROG,tL,.018,0.,.01,1.,.006)" release=.2 slidetime=.6 relpower=1

env strichr_velattack shape=antivelattack velmin=.2 velmax=.6 attack=.48
form strichr10_src define src="env_AHDSR(_PROG,tL,.24,0.,.1,1.,.262)*waveshape(MADD(_PROG,f,0.,256,1,-.286,(3232.+(1975.*clip((1.+.775)*_sin(.485*B)))),11.902,.763,3.63,.017,-.13,0),-.13,.1,.5,.2,.5,.6)+.5*env_AHDSR(_PROG,tL,.24,0.,.1,1.,.262)*MADD(_PROG,.501*f,0.,64,1,-.286,(3232.+(1975.*clip((1.+.775)*_sin(.485*B)))),11.902,.763,3.63,.017,.2*-.13,0)"
param strichr10_volume segments=strichr10_seg,8,24,strichr10_segend,64,72,strichr10_segend2,72,73 default=1
seg strichr10_seg shape=linear from=0,0 to=16,1
seg strichr10_segend shape=linear from=0,0.05 to=8,.4
seg strichr10_segend2 shape=linear shift=.4
main    strichr.10   src=strichr10_volume*strichr_velattack*strichr10_src release=0.26 relpower=1 slidetime=.125

param strichr11_volume segments=seg11_rise,8,12 default=1
seg seg11_rise shape=linear from=0,0.4 to=4,1
form strichr11_src define src="vel*env_AHDSR(_PROG,tL,.249,0.,.1,1.,.37)*waveshape(MADD(_PROG,f,0.,256,1,-.383,(7365.+(1083.*clip((1.+.916)*_sin(.525*B)))),18.724,1.488,1.24,.022,-.27,0),-.27,.1,.5,.2,.5,.6)+.5*vel*env_AHDSR(_PROG,tL,.249,0.,.1,1.,.37)*MADD(_PROG,.501*f,0.,64,1,-.383,(7365.+(1083.*clip((1.+.916)*_sin(.525*B)))),18.724,1.488,1.24,.022,.2*-.27,0)"
main    strichr.11   src=strichr11_volume*strichr11_src release=0.4 relpower=1 slidetime=.125

param  someshit  segments=someseg,1,8 default=4
seg someseg shape=linear from=0,0 to=8,2
env testdecay expdecay decay=.33
osc testsomeshit shape=sin freq=f overdrive=.5*someshit
form testsomeshape sinshape src=testsomeshit amount=someshit parts=7
osc testsomeshitA shape=sin freq=.5*f overdrive=.5*someshit
osc testsomeshit1 shape=badd freq=.5*f mix=.8 amp=3 peak=300 sigma=50 ncut=8 detune=0.001
osc testsomeshit2 shape=badd freq=.5*f mix=.8 amp=3 peak=400 sigma=10 ncut=4 detune=0.001
osc testsomeshit3 shape=badd freq=f mix=.8 amp=3 peak=1000 sigma=100 ncut=3 detune=0.005
main SOMESHIT src=.1*testsomeshitA*testdecay+.2*testsomeshape*testdecay !+testsomeshit1+testsomeshit2+testsomeshit3 release=.05

env baddo_freqdecay shape=expdecay exponent=150 shift=1 scale=3
osc baddo_bass shape=squ freq=.5*f overdrive=.7 pw=.9+-.2*baddo_freqdecay
osc baddo_bass2 shape=squ freq=.499*f overdrive=.2 pw=-.5+.3*baddo_freqdecay
osc baddo_badd shape=badd freq=f*baddo_freqdecay mix=1.4 amp=3 peak=800*baddo_freqdecay sigma=100 ncut=4 detune=0.007
main BADDo src=.3*baddo_bass+.2*baddo_bass2+vel*baddo_bass2+vel*baddo_badd+baddo_badd release=.03 slidetime=.131

form FQdly1_src define src="vel*waveshape(QFM(_PROG,f,0.,.00787*54.,.00787*82.,.00787*86.,.00787*64.,.5,1.,1.001,1.,.00787*95.,.00787*83.,.00787*18.,.00787*83.,10.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_PROG,tL,.2,0.,.01,1.,.05)+vel*clip((1.+2.)*_sin(f*_PROG))"
env FQdly1_env shape=limitlength factor=.3 release=.066
form FQdly1_dly delay src=FQdly1_env*FQdly1_src number=4 delay=.133 gain=.53
form FQdly1_dly2 delay src=FQdly1_env*FQdly1_src number=5 delay=.0866 gain=.435
main FQMimp1dly src=.5*FQdly1_dly+.5*FQdly1_dly2 release=1 slidetime=.125

param FQMimp4_volume segments=seg_volreduce,0,8,seg_volfadeout,8,16 default=1
seg seg_volreduce shape=linear from=0,.3 to=8,.65
seg seg_volfadeout shape=linear from=0,.65 to=8,0.4
form FQMimp4_src define src="vel*waveshape(QFM(_PROG,f,0.,.00787*15.,.00787*122.,.00787*39.,.00787*53.,.5,1.,1.001,1.,.00787*81.,.00787*81.,.00787*57.,.00787*87.,9.),(.5+(.5*_sin(.4*B))),.05,.46,.3,.7,.8)*env_AHDSR(_BPROG,L,.2,0.,.01,1.,.05)+vel*clip((1.+2.)*_sin(f*_PROG))"
main    FQMimp4    src=FQMimp4_volume*FQMimp4_src release=.035 slidetime=.125

main    maceboss.0    src="env_AHDSR(_BPROG,L,.014,0.,.01,1.,.006)*sinshape(MADD(_PROG,.5*f,0.,256,2,1+.9*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),(1344.+(712.*_sin_(2.*B,.4))),15.,7.13,7.25,.015,.4*(.55+(.4*clip((1.+1.)*_sin(4.*B)))),0),1.,3.)+.8*clip((1.+.5)*_sin(.499*f*_PROG))+env_AHDSR(_BPROG,L,.014,0.,.01,1.,.006)*.4*_sq_(1.01*f*_PROG,.95)" release=.06 slidetime=.31 relpower=1